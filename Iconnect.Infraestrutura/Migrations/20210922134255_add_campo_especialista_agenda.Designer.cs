// <auto-generated />
using System;
using Iconnect.Infraestrutura.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Iconnect.Infraestrutura.Migrations
{
    [DbContext(typeof(IconnectCoreContext))]
    [Migration("20210922134255_add_campo_especialista_agenda")]
    partial class add_campo_especialista_agenda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_aba_agendaBackupAutomatico", b =>
                {
                    b.Property<int>("aba_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("aba_b_ativo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("aba_c_frequencia")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<Guid>("aba_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("aba_c_usuario")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("aba_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("aba_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("aba_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("aba_d_modificao")
                        .HasColumnType("datetime");

                    b.Property<int?>("aba_n_diaSemana")
                        .HasColumnType("int");

                    b.Property<int>("aba_n_horario")
                        .HasColumnType("int");

                    b.HasKey("aba_n_codigo");

                    b.HasIndex("aba_cli_n_codigo");

                    b.ToTable("tb_aba_agendaBackupAutomatico");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ace_acesso", b =>
                {
                    b.Property<int>("ace_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ace_b_bloqueado")
                        .HasColumnType("bit");

                    b.Property<bool?>("ace_b_relacional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ace_b_relacionalDist")
                        .HasColumnType("bit");

                    b.Property<string>("ace_c_login")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ace_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("ace_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("ace_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ace_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ace_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("ace_dis_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ace_emp_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ace_per_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("ace_n_codigo");

                    b.HasIndex("ace_dis_n_codigo");

                    b.HasIndex("ace_emp_n_codigo");

                    b.HasIndex("ace_per_n_codigo");

                    b.ToTable("tb_ace_acesso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ace_per_acessoPermissionamento", b =>
                {
                    b.Property<Guid>("ace_per_u_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("per_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<Guid>("per_u_n_codigo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("tb_ace_acessoace_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("ace_per_u_codigo");

                    b.HasIndex("per_u_n_codigo");

                    b.HasIndex("tb_ace_acessoace_n_codigo");

                    b.ToTable("tb_ace_per_acessoPermissionamento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_aco_acompanhante", b =>
                {
                    b.Property<int>("aco_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("aco_age_n_codigo")
                        .HasColumnType("int");

                    b.Property<Guid>("aco_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("aco_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("aco_vis_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("aco_n_codigo");

                    b.HasIndex("aco_age_n_codigo");

                    b.HasIndex("aco_vis_n_codigo");

                    b.ToTable("tb_aco_acompanhante");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_afa_afastamento", b =>
                {
                    b.Property<int>("afa_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("afa_b_expirado")
                        .HasColumnType("bit");

                    b.Property<bool>("afa_b_sincronizado")
                        .HasColumnType("bit");

                    b.Property<string>("afa_c_descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("afa_c_unique")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("afa_d_atualizado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("afa_d_fim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("afa_d_inclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("afa_d_inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("afa_d_modificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("afa_mor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("afa_n_codigo");

                    b.HasIndex("afa_mor_n_codigo");

                    b.ToTable("tb_afa_afastamento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_age_agenda", b =>
                {
                    b.Property<int>("age_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("age_c_horarioFim")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("age_c_horarioInicio")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("age_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("age_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("age_cal_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("age_d_dataAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("age_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("age_grf_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("age_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("age_vis_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("age_n_codigo");

                    b.HasIndex("age_cal_n_codigo");

                    b.HasIndex("age_grf_n_codigo");

                    b.HasIndex("age_mor_n_codigo");

                    b.HasIndex("age_vis_n_codigo");

                    b.ToTable("tb_age_agenda");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_age_agenteComercial", b =>
                {
                    b.Property<int>("age_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("age_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<string>("age_c_celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age_c_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age_c_nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age_c_rg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("age_n_codigo");

                    b.HasIndex("age_ace_n_codigo");

                    b.ToTable("tb_age_agenteComercial");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_apa_aplicacoesAlarme", b =>
                {
                    b.Property<int>("apa_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apa_c_processo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("apa_c_tipo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("apa_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("apa_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("apa_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("apa_emp_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("apa_n_codigo");

                    b.HasIndex("apa_emp_n_codigo");

                    b.ToTable("tb_apa_aplicacoesAlarme");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ard_arquivoDependencias", b =>
                {
                    b.Property<int>("ard_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ard_blob_PDFImagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ard_c_nomePDFImagem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("ard_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("ard_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ard_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ard_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("ard_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("ard_n_codigo");

                    b.ToTable("tb_ard_arquivoDependencias");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ate_atendimento", b =>
                {
                    b.Property<int>("ate_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ate_b_LimparEvento")
                        .HasColumnType("bit");

                    b.Property<bool?>("ate_b_voipAbandonada")
                        .HasColumnType("bit");

                    b.Property<string>("ate_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ate_c_from")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ate_c_identificacaoVOIP")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ate_c_ramalAtendeu")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ate_c_status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("ate_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("ate_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ate_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ate_d_data")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ate_d_dataFinalizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ate_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ate_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("ate_ope_n_preferencial")
                        .HasColumnType("int");

                    b.Property<int?>("ate_pec_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ate_tpa_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("ate_n_codigo");

                    b.HasIndex("ate_cli_n_codigo");

                    b.HasIndex("ate_ope_n_preferencial");

                    b.HasIndex("ate_pec_n_codigo");

                    b.HasIndex("ate_tpa_n_codigo");

                    b.ToTable("tb_ate_atendimento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avg_avisoGrupoFamiliar", b =>
                {
                    b.Property<int>("avg_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("avg_b_lidoNaoLido")
                        .HasColumnType("bit");

                    b.Property<string>("avg_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("avg_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("avg_cav_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("avg_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("avg_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("avg_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("avg_grf_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("avg_n_codigo");

                    b.HasIndex("avg_cav_n_codigo");

                    b.HasIndex("avg_grf_n_codigo");

                    b.ToTable("tb_avg_avisoGrupoFamiliar");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avi_aviso", b =>
                {
                    b.Property<int>("avi_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("avi_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<string>("avi_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("avi_c_status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("avi_c_titulo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("avi_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("avi_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("avi_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("avi_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("avi_d_fim")
                        .HasColumnType("date");

                    b.Property<DateTime>("avi_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("avi_d_inicio")
                        .HasColumnType("date");

                    b.Property<DateTime?>("avi_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("avi_emp_n_codigo")
                        .HasColumnType("int");

                    b.Property<string>("avi_ope_c_enviarPara")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("avi_n_codigo");

                    b.HasIndex("avi_ace_n_codigo");

                    b.HasIndex("avi_emp_n_codigo");

                    b.ToTable("tb_avi_aviso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avi_avisoEmpresa", b =>
                {
                    b.Property<int>("avi_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("avi_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("avi_c_status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("avi_c_titulo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("avi_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("avi_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("avi_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("avi_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("avi_d_fim")
                        .HasColumnType("date");

                    b.Property<DateTime>("avi_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("avi_d_inicio")
                        .HasColumnType("date");

                    b.Property<DateTime?>("avi_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("avi_emp_c_enviarPara")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("avi_n_codigo");

                    b.ToTable("tb_avi_avisoEmpresa");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avi_avisoMorador", b =>
                {
                    b.Property<int>("avm_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("avi_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("avi_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("avi_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("avm_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("avm_b_lidoNaoLido")
                        .HasColumnType("bit");

                    b.Property<string>("avm_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("avm_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("avm_cav_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("avm_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("avm_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("avm_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("avm_mor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("avm_n_codigo")
                        .HasName("PK_avm_n_codigo");

                    b.HasIndex("avm_ace_n_codigo");

                    b.HasIndex("avm_cav_n_codigo");

                    b.HasIndex("avm_mor_n_codigo");

                    b.ToTable("tb_avi_avisoMorador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avp_avisoPrestador", b =>
                {
                    b.Property<int>("avp_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("avp_b_lidoNaoLido")
                        .HasColumnType("bit");

                    b.Property<string>("avp_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("avp_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("avp_cav_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("avp_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("avp_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("avp_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("avp_pse_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("avp_n_codigo");

                    b.HasIndex("avp_cav_n_codigo");

                    b.HasIndex("avp_pse_n_codigo");

                    b.ToTable("tb_avp_avisoPrestador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avv_avisoVisitante", b =>
                {
                    b.Property<int>("avv_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("avv_b_lidoNaoLido")
                        .HasColumnType("bit");

                    b.Property<string>("avv_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("avv_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("avv_cav_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("avv_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("avv_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("avv_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("avv_vis_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("avv_n_codigo")
                        .HasName("PK_avv_n_codigo");

                    b.HasIndex("avv_cav_n_codigo");

                    b.HasIndex("avv_vis_n_codigo");

                    b.ToTable("tb_avv_avisoVisitante");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_bio_biometria", b =>
                {
                    b.Property<int>("bio_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("bio_c_imagem")
                        .HasColumnType("image");

                    b.Property<string>("bio_c_status")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("bio_c_template")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("bio_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("bio_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("bio_con_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("bio_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("bio_d_dataSolicitacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("bio_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("bio_n_altura")
                        .HasColumnType("int");

                    b.Property<int>("bio_n_largura")
                        .HasColumnType("int");

                    b.HasKey("bio_n_codigo");

                    b.HasIndex("bio_cli_n_codigo");

                    b.HasIndex("bio_con_n_codigo");

                    b.ToTable("tb_bio_biometria");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cab_cabecalhoEvento", b =>
                {
                    b.Property<int>("cab_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cab_c_descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cab_c_nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("cab_d_inclusao")
                        .HasColumnType("datetime2");

                    b.HasKey("cab_n_codigo");

                    b.ToTable("tb_cab_cabecalhoEvento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cac_controleAcesso", b =>
                {
                    b.Property<int>("cac_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("cac_b_ativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("cac_b_panico")
                        .HasColumnType("bit");

                    b.Property<string>("cac_c_biometria")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cac_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cac_c_numeroCartao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cac_c_numeroChave")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cac_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cac_c_tipo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("cac_c_tipoAcesso")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("cac_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("cac_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cac_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("cac_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("cac_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cac_pse_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cac_usu_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cac_vis_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("cac_n_codigo");

                    b.HasIndex("cac_mor_n_codigo");

                    b.HasIndex("cac_pse_n_codigo");

                    b.HasIndex("cac_vis_n_codigo");

                    b.ToTable("tb_cac_controleAcesso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cac_controleAplicacoesCliente", b =>
                {
                    b.Property<int>("cac_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cac_c_processo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("cac_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("cac_con_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("cac_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cac_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("cac_n_codigo");

                    b.HasIndex("cac_con_n_codigo");

                    b.ToTable("tb_cac_controleAplicacoesCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cae_controleAcessoExcluido", b =>
                {
                    b.Property<int>("cae_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("cae_b_ativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("cae_b_panico")
                        .HasColumnType("bit");

                    b.Property<bool>("cae_b_sincronizado")
                        .HasColumnType("bit");

                    b.Property<string>("cae_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cae_c_numeroCartao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cae_c_numeroChave")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cae_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cae_c_tipo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("cae_c_tipoAcesso")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("cae_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("cae_cac_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cae_con_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("cae_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cae_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("cae_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("cae_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cae_pse_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cae_usu_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cae_vis_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("cae_n_codigo")
                        .HasName("PK_tb_cae_controleAcesso");

                    b.HasIndex("cae_con_n_codigo");

                    b.ToTable("tb_cae_controleAcessoExcluido");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cal_catalogo", b =>
                {
                    b.Property<int>("cal_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("cal_b_ativo")
                        .HasColumnType("bit");

                    b.Property<string>("cal_c_capa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_descricaoReprovado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_especialidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_logoMarca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_redeSocial1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_redeSocial2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_telefonePrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cal_c_telefoneSecundario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("cal_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("cal_c_website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cal_cat_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("cal_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("cal_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cal_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("cal_fot_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cal_grf_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cal_lcc_n_codigoNumero")
                        .HasColumnType("int");

                    b.Property<int?>("cal_lcc_n_codigoTorre")
                        .HasColumnType("int");

                    b.Property<int>("cal_scc_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("cal_n_codigo");

                    b.HasIndex("cal_fot_n_codigo")
                        .IsUnique()
                        .HasFilter("[cal_fot_n_codigo] IS NOT NULL");

                    b.HasIndex("cal_grf_n_codigo");

                    b.HasIndex("cal_scc_n_codigo");

                    b.ToTable("tb_cal_catalogo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_can_canalLayout", b =>
                {
                    b.Property<int>("can_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("can_b_check")
                        .HasColumnType("bit");

                    b.Property<string>("can_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("can_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("can_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("can_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("can_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("can_lay_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("can_n_index")
                        .HasColumnType("int");

                    b.HasKey("can_n_codigo");

                    b.HasIndex("can_lay_n_codigo");

                    b.ToTable("tb_can_canalLayout");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cat_categoriaCatalogo", b =>
                {
                    b.Property<int>("cat_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("cat_b_ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("cat_b_solicitarEspecialidade")
                        .HasColumnType("bit");

                    b.Property<bool>("cat_b_tipoLink")
                        .HasColumnType("bit");

                    b.Property<string>("cat_c_descricao")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("cat_c_imagem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cat_c_link")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cat_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("cat_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("cat_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("cat_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cat_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("cat_n_codigo");

                    b.HasIndex("cat_cli_n_codigo");

                    b.ToTable("tb_cat_categoriaCatalogo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cav_categorizacaoAviso", b =>
                {
                    b.Property<int>("cav_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cav_c_cor")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cav_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("cav_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("cav_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("cav_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("cav_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cav_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("cav_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("cav_n_codigo");

                    b.ToTable("tb_cav_categorizacaoAviso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cde_cadastro_entregas", b =>
                {
                    b.Property<int>("cde_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("cde_b_entregue")
                        .HasColumnType("bit");

                    b.Property<string>("cde_c_codigoRastreio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cde_c_descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cde_c_obsEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cde_c_recebidoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("cde_d_dataBaixa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("cde_d_dataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("cde_fen_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cde_grf_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("cde_n_codigo")
                        .HasName("PK_cde_n_codigo");

                    b.HasIndex("cde_fen_n_codigo");

                    b.HasIndex("cde_grf_n_codigo");

                    b.ToTable("tb_cde_cadastro_entregas");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cev_categorizacaoEvento", b =>
                {
                    b.Property<int>("cev_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("cev_b_geraAtendimento")
                        .HasColumnType("bit");

                    b.Property<bool?>("cev_b_utilizaTemporizador")
                        .HasColumnType("bit");

                    b.Property<string>("cev_c_codigoEvento")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cev_c_cor")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cev_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("cev_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("cev_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("cev_cev_n_temporizador")
                        .HasColumnType("int");

                    b.Property<DateTime?>("cev_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("cev_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cev_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("cev_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("cev_n_codigo");

                    b.HasIndex("cev_cev_n_temporizador");

                    b.ToTable("tb_cev_categorizacaoEvento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cha_chavesDeAcesso", b =>
                {
                    b.Property<int>("cha_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cha_c_chave")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("cha_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("cha_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cha_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("cha_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("cha_lid_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cha_lip_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cha_liv_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("cha_n_codigo");

                    b.HasIndex("cha_lid_n_codigo");

                    b.HasIndex("cha_lip_n_codigo");

                    b.HasIndex("cha_liv_n_codigo");

                    b.ToTable("tb_cha_chavesDeAcesso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cid_cidade", b =>
                {
                    b.Property<int>("cid_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cid_c_estado")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("cid_c_nome")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<Guid>("cid_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("cid_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cid_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("cid_est_n_codigo")
                        .HasColumnType("int");

                    b.Property<string>("cid_n_ibge")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("cid_n_codigo");

                    b.HasIndex("cid_est_n_codigo");

                    b.ToTable("tb_cid_cidade");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cla_cabecalhoLayout", b =>
                {
                    b.Property<int>("cla_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cla_c_exibirem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cla_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("cla_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("cla_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("cla_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cla_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("cla_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("cla_n_codigo");

                    b.HasIndex("cla_cli_n_codigo");

                    b.ToTable("tb_cla_cabecalhoLayout");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cli_cliente", b =>
                {
                    b.Property<int>("cli_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("cli_b_ativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("cli_b_controleAcesso")
                        .HasColumnType("bit");

                    b.Property<bool?>("cli_b_disparoSMS")
                        .HasColumnType("bit");

                    b.Property<bool>("cli_b_free")
                        .HasColumnType("bit");

                    b.Property<bool?>("cli_b_licencaAtiva")
                        .HasColumnType("bit");

                    b.Property<string>("cli_c_bairro")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_celular")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_celular2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_celularAdministradora")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_centralVoip")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_cep")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_chave")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_cnpj")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_codInstalacaoOffline")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_codInstalacaoRenovacao")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_codigoReferencia")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_complemento")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_contraSenha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_descricaoInstitucional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cli_c_dominio")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_dominioSIP")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_email2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_emailAdministradora")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_emailSegTrabalho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cli_c_fantasiaAdministradora")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_ie")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_ip")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_nomeFantasia")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_numero")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_pessoaContato")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_pessoaContatoAdministradora")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_porta")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_portaSIP")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_ramais")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_ramal")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_ramalPortaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cli_c_range_periodo_aplicadorTicket")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_razaoSocial")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_rua")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_senhaAppGarenConnect")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_senhaSIP")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_serial")
                        .HasColumnType("varchar(23)")
                        .HasMaxLength(23)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_telefoneAdministradora")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_telefoneComercial")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_telefoneComercial2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_tipoRede")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("cli_c_tituloInstitucional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("cli_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("cli_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("cli_c_zona")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("cli_can_n_access")
                        .HasColumnType("int");

                    b.Property<int?>("cli_can_n_panoramica")
                        .HasColumnType("int");

                    b.Property<int?>("cli_cid_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("cli_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("cli_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("cli_d_dataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("cli_d_dataExpiracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("cli_d_dataUltimaSincronizacaoCloud")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("cli_d_dataVencimentoLicenca")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("cli_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("cli_d_inicioContrato")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("cli_d_inicioLicenca")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("cli_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("cli_d_ultimoContatoSolution")
                        .HasColumnType("datetime");

                    b.Property<int?>("cli_emp_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cli_est_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cli_lay_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cli_mol_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cli_n_diaVencimento")
                        .HasColumnType("int");

                    b.Property<int?>("cli_n_horasExpiracaoTokenDelivery")
                        .HasColumnType("int");

                    b.Property<int?>("cli_n_numDiasExpiracao")
                        .HasColumnType("int");

                    b.Property<int?>("cli_n_tempoGravacaoGoogleDrive")
                        .HasColumnType("int");

                    b.Property<decimal?>("cli_n_valorLicenca")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("cli_tcl_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("cli_n_codigo");

                    b.HasIndex("cli_can_n_access");

                    b.HasIndex("cli_cid_n_codigo");

                    b.HasIndex("cli_emp_n_codigo");

                    b.HasIndex("cli_est_n_codigo");

                    b.HasIndex("cli_mol_n_codigo");

                    b.HasIndex("cli_tcl_n_codigo");

                    b.ToTable("tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_con_controladora", b =>
                {
                    b.Property<int>("con_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("con_b_ativo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("con_b_gerouAtendimento")
                        .HasColumnType("bit");

                    b.Property<bool?>("con_b_online")
                        .HasColumnType("bit");

                    b.Property<string>("con_c_dominioDDNS")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_ip")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_modelo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_perfis")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(11)")
                        .HasDefaultValueSql("('MOR,VIS,PSE')")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<string>("con_c_porta")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("con_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("con_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_usuarioAlteracao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("con_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("con_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("con_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("con_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("con_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("con_d_ultimoContato")
                        .HasColumnType("datetime");

                    b.Property<int?>("con_n_h")
                        .HasColumnType("int");

                    b.Property<int?>("con_n_quantidadePortas")
                        .HasColumnType("int");

                    b.Property<int?>("con_pta_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("con_n_codigo");

                    b.HasIndex("con_cli_n_codigo");

                    b.ToTable("tb_con_controladora");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_con_monitoramentoControleAcesso", b =>
                {
                    b.Property<int>("con_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cin_c_tipoEventoMotivo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("con_ate_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("con_b_LimparEvento")
                        .HasColumnType("bit");

                    b.Property<bool?>("con_b_inOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("con_b_panico")
                        .HasColumnType("bit");

                    b.Property<bool?>("con_b_panicoTratado")
                        .HasColumnType("bit");

                    b.Property<bool?>("con_b_pendenteVideo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("con_b_precisaAtendimento")
                        .HasColumnType("bit");

                    b.Property<bool?>("con_b_tipoPanico")
                        .HasColumnType("bit");

                    b.Property<string>("con_c_UsuarioTratamentoPanico")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_acao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_cardNumber")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_destino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<string>("con_c_doorId")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_obsTratamentoPanico")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_pin")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_pontoAcesso")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("con_c_tipoAcesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("con_c_tipoPessoa")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("con_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("con_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("con_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("con_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("con_d_dataTratamentoPanico")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("con_d_evento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("con_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("con_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("con_fot_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("con_n_h")
                        .HasColumnType("int");

                    b.Property<int?>("con_pec_n_codigo")
                        .HasColumnType("int");

                    b.Property<string>("con_ref_c_nomeRefeicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("con_ref_d_valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("con_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("con_n_codigo")
                        .HasName("PK_tb_con_controleAcesso");

                    b.HasIndex("con_c_unique")
                        .HasName("idx_tb_con_monitoramentoControleAces99");

                    b.HasIndex("con_cli_n_codigo")
                        .HasName("IX_tb_con_monitoramentoControleAcesso_2");

                    b.HasIndex("con_d_evento")
                        .HasName("IX_tb_con_monitoramentoControleAcesso_1");

                    b.HasIndex("con_n_codigo")
                        .HasName("IX_tb_con_monitoramentoControleAcesso_3");

                    b.HasIndex("con_pec_n_codigo");

                    b.ToTable("tb_con_monitoramentoControleAcesso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cpg_comandoPGM", b =>
                {
                    b.Property<int>("cgp_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("cgp_b_sirene")
                        .HasColumnType("bit");

                    b.Property<string>("cgp_c_comando")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("cgp_c_descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("cgp_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("cgp_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("cgp_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("cgp_n_modelo")
                        .HasColumnType("int");

                    b.HasKey("cgp_n_codigo");

                    b.ToTable("tb_cpg_comandoPGM");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_csi_configuracaoSincronizacao", b =>
                {
                    b.Property<int>("csi_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("csi_b_ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("csi_b_desce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("csi_b_sobe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("csi_c_prefixo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("csi_c_tabela")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("csi_c_where")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(max)")
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<int?>("csi_n_importancia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("csi_n_ordem")
                        .HasColumnType("int");

                    b.HasKey("csi_n_codigo");

                    b.ToTable("tb_csi_configuracaoSincronizacao");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_csr_connectionSignalR", b =>
                {
                    b.Property<long>("csr_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("csr_b_conectado")
                        .HasColumnType("bit");

                    b.Property<string>("csr_c_connectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("csr_d_dataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("csr_d_dataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("csr_n_hub")
                        .HasColumnType("int");

                    b.Property<int>("csr_n_id")
                        .HasColumnType("int");

                    b.Property<int>("csr_n_perfil")
                        .HasColumnType("int");

                    b.Property<int>("csr_n_usuarioId")
                        .HasColumnType("int");

                    b.HasKey("csr_n_codigo");

                    b.HasIndex("csr_c_connectionId");

                    b.ToTable("tb_csr_connectionSignalR");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ddv_dispositivoDVRCliente", b =>
                {
                    b.Property<int>("ddv_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ddv_c_ip")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ddv_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ddv_c_porta")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ddv_c_portaHTTP")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ddv_c_portaServico")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ddv_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("ddv_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ddv_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("ddv_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ddv_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ddv_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ddv_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("ddv_fab_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ddv_mod_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ddv_n_canais")
                        .HasColumnType("int");

                    b.HasKey("ddv_n_codigo");

                    b.HasIndex("ddv_cli_n_codigo");

                    b.ToTable("tb_ddv_dispositivoDVRCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dev_device", b =>
                {
                    b.Property<string>("dev_c_uuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dev_c_fcmToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dev_c_plataforma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dev_c_versaoApp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dev_c_versaoSO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dev_d_dataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dev_d_dataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("dev_vpp_n_visitanteApp")
                        .HasColumnType("int");

                    b.HasKey("dev_c_uuid");

                    b.HasIndex("dev_c_fcmToken");

                    b.HasIndex("dev_vpp_n_visitanteApp");

                    b.ToTable("tb_dev_device");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dis_distribuidor", b =>
                {
                    b.Property<int>("dis_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("dis_b_ativo")
                        .HasColumnType("bit");

                    b.Property<string>("dis_c_bairro")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_celular")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_celular2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_cep")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_cnpj")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_complemento")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_email2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_foneComercial")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_foneComercial2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_ie")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_nomeFantasia")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_numero")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_pessoaContato")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_razaoSocial")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dis_c_rua")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("dis_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("dis_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("dis_cid_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dis_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("dis_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("dis_d_contrato")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("dis_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("dis_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("dis_est_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("dis_n_codigo");

                    b.HasIndex("dis_cid_n_codigo");

                    b.HasIndex("dis_est_n_codigo");

                    b.ToTable("tb_dis_distribuidor");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dmo_documentoMorador", b =>
                {
                    b.Property<int>("dmo_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("dmo_c_unique")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dmo_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dmo_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("dmo_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("dmo_d_vencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("dmo_doc_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("dmo_mor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("dmo_n_codigo")
                        .HasName("PK_tb_dmo_documentoMorador");

                    b.HasIndex("dmo_doc_n_codigo");

                    b.HasIndex("dmo_mor_n_codigo");

                    b.ToTable("tb_dmo_documentoMorador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_doc_documento", b =>
                {
                    b.Property<int>("doc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("doc_b_ativarMonitoramento")
                        .HasColumnType("bit");

                    b.Property<bool>("doc_b_bloquearAcesso")
                        .HasColumnType("bit");

                    b.Property<bool>("doc_b_notificacaoAcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("doc_b_notificacaoVencimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("doc_b_preNotificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("doc_c_nomeDocumento")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("doc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("doc_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("doc_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("doc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("doc_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("doc_n_diasNotificacao")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.HasKey("doc_n_codigo")
                        .HasName("PK_tb_doc_documento");

                    b.HasIndex("doc_cli_n_codigo");

                    b.ToTable("tb_doc_documento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dow_downloads_arquivos", b =>
                {
                    b.Property<int>("dow_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("dow_c_arquivo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("dow_c_descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dow_c_titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dow_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("dow_d_data")
                        .HasColumnType("datetime2");

                    b.HasKey("dow_n_codigo")
                        .HasName("[PK_tb_dow_downloads_arquivos");

                    b.HasIndex("dow_cli_n_codigo");

                    b.ToTable("tb_dow_downloads_arquivos");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dpg_disparoPGM", b =>
                {
                    b.Property<int>("dpg_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("dpg_b_pendente")
                        .HasColumnType("bit");

                    b.Property<Guid>("dpg_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("dpg_c_usuario")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("dpg_cgp_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("dpg_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("dpg_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dpg_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dpg_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("dpg_eqc_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("dpg_n_codigo");

                    b.HasIndex("dpg_cgp_n_codigo");

                    b.HasIndex("dpg_eqc_n_codigo");

                    b.ToTable("tb_dpg_disparoPGM");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dpn_dependencias", b =>
                {
                    b.Property<int>("dpn_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("dpn_ard_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("dpn_b_ativoInativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("dpn_b_autoLiberar")
                        .HasColumnType("bit");

                    b.Property<bool?>("dpn_b_permitirReservarPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("dpn_c_apto")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dpn_c_bloco")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dpn_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dpn_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dpn_c_periodoManha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dpn_c_periodoNoite")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dpn_c_periodoPorHorario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dpn_c_periodoTarde")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dpn_c_termosUso")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("dpn_c_tipoTermoUso")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("dpn_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("dpn_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("dpn_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dpn_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("dpn_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("dpn_ftd_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("dpn_n_limitePessoas")
                        .HasColumnType("int");

                    b.Property<int>("dpn_n_reservaPeriodo")
                        .HasColumnType("int");

                    b.HasKey("dpn_n_codigo")
                        .HasName("PK_tb_dpn_dependencia");

                    b.HasIndex("dpn_ard_n_codigo");

                    b.HasIndex("dpn_cli_n_codigo");

                    b.HasIndex("dpn_ftd_n_codigo");

                    b.ToTable("tb_dpn_dependencias");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dva_duvidasApp", b =>
                {
                    b.Property<int>("dva_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dva_c_duvida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dva_c_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dva_c_resposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("dva_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("dva_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("dva_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dva_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("dva_n_codigo")
                        .HasName("PK_dva_n_codigo");

                    b.HasIndex("dva_cli_n_codigo");

                    b.ToTable("tb_dva_duvidasApp");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ema_email", b =>
                {
                    b.Property<int>("ema_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ema_b_enviado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ema_c_anexo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ema_c_assunto")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("ema_c_caminhoAnexo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ema_c_copia")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ema_c_copiaOculta")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ema_c_corpo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ema_c_destinatario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ema_c_remetente")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ema_d_data")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ema_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("ema_n_codigo");

                    b.ToTable("tb_ema_email");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_emp_empresa", b =>
                {
                    b.Property<int>("emp_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("emp_b_ativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("emp_b_tipoGaren")
                        .HasColumnType("bit");

                    b.Property<string>("emp_c_RangePortas")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_RangeRamais")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_bairro")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_celular")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_celular2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_cep")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_cnpj")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_complemento")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_contatoEmail1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_contatoEmail2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_contatoNome1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_contatoNome2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_contatoTelefone1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_contatoTelefone2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_email2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_foneComercial")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_foneComercial2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_ie")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_nomeFantasia")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_numero")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_pessoaContato")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_ramais")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_razaoSocial")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("emp_c_rua")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("emp_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("emp_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("emp_cid_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("emp_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("emp_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("emp_d_contrato")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("emp_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("emp_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("emp_dis_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("emp_est_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("emp_fem_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("emp_mol_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("emp_n_codigo");

                    b.HasIndex("emp_cid_n_codigo");

                    b.HasIndex("emp_dis_n_codigo");

                    b.HasIndex("emp_est_n_codigo");

                    b.HasIndex("emp_fem_n_codigo");

                    b.HasIndex("emp_mol_n_codigo");

                    b.ToTable("tb_emp_empresa");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_eno_envioNotificacao", b =>
                {
                    b.Property<int>("eno_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("eno_c_GruposFamiliares")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("eno_c_MoradoresGruposFamiliares")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("eno_c_mensagem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("eno_c_titulo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("eno_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("eno_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("eno_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("eno_d_fim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("eno_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("eno_d_inicio")
                        .HasColumnType("datetime");

                    b.HasKey("eno_n_codigo");

                    b.HasIndex("eno_cli_n_codigo");

                    b.ToTable("tb_eno_envioNotificacao");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ent_entidade", b =>
                {
                    b.Property<int>("ent_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ent_c_chave")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ent_c_nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<Guid>("ent_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ent_c_valorPadrao")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("ent_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ent_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ent_n_codigo");

                    b.ToTable("tb_ent_entidade");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_eqc_equipamentoCliente", b =>
                {
                    b.Property<int>("eqc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("eqc_b_apontamentoLocal")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("eqc_c_conta")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("eqc_c_ip")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("eqc_c_nomePonto")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("eqc_c_porta")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("eqc_c_senhaRemota")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<Guid>("eqc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("eqc_c_versao")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("eqc_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("eqc_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("eqc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("eqc_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("eqc_d_ultimoContato")
                        .HasColumnType("datetime");

                    b.Property<int?>("eqc_n_modelo")
                        .HasColumnType("int");

                    b.Property<int?>("eqc_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("eqc_n_codigo");

                    b.HasIndex("eqc_cli_n_codigo");

                    b.ToTable("tb_eqc_equipamentoCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_err_erro", b =>
                {
                    b.Property<int>("err_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("err_c_inner")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("err_c_innerStack")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("err_c_message")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("err_c_stack")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("erro_d_data")
                        .HasColumnType("datetime");

                    b.HasKey("err_n_codigo");

                    b.ToTable("tb_err_erro");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_est_estado", b =>
                {
                    b.Property<int>("est_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("est_c_descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("est_c_sigla")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("est_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("est_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("est_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("est_n_codigo")
                        .HasName("pk_tb_est_estado");

                    b.ToTable("tb_est_estado");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_eti_entidadeTipo", b =>
                {
                    b.Property<int>("eti_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ent_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("ent_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ent_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("eti_c_nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("eti_ent_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("eti_tlc_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("eti_n_codigo");

                    b.HasIndex("eti_ent_n_codigo");

                    b.HasIndex("eti_tlc_n_codigo");

                    b.ToTable("tb_eti_entidadeTipo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_eva_eventoAcesso", b =>
                {
                    b.Property<int>("eva_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("eva_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("eva_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("eva_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("eva_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("eva_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("eva_n_chave")
                        .HasColumnType("int");

                    b.HasKey("eva_n_codigo");

                    b.ToTable("tb_eva_eventoAcesso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_eve_evento", b =>
                {
                    b.Property<int>("eve_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("eve_b_lido")
                        .HasColumnType("bit");

                    b.Property<string>("eve_c_conta")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("eve_c_evento")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("eve_c_ip")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("eve_c_particao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("eve_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("eve_c_zona")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("eve_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("eve_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("eve_d_inclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("eve_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("eve_n_codigo")
                        .HasName("PK_tb_eve_evento_1");

                    b.HasIndex("eve_cli_n_codigo", "eve_b_lido")
                        .HasName("IX_tb_eve_evento");

                    b.ToTable("tb_eve_evento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_exc_exclusoes", b =>
                {
                    b.Property<Guid?>("exc_c_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("exc_c_tabela")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid?>("exc_cli_c_unique")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("exc_d_dataExclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasIndex("exc_cli_c_unique")
                        .HasName("idx_tb_exc_exclusoes99")
                        .HasAnnotation("SqlServer:Include", new[] { "exc_c_tabela", "exc_c_id", "exc_d_dataExclusao" });

                    b.ToTable("tb_exc_exclusoes");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fac_face", b =>
                {
                    b.Property<int>("fac_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("fac_c_imagem")
                        .HasColumnType("image");

                    b.Property<string>("fac_c_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fac_c_template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("fac_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("fac_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("fac_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("fac_d_dataSolicitacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("fac_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("fac_n_tamanho")
                        .HasColumnType("int");

                    b.Property<int>("fac_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("fac_n_codigo");

                    b.HasIndex("fac_cli_n_codigo");

                    b.ToTable("tb_fac_face");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fap_fotoApp", b =>
                {
                    b.Property<int>("fap_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("fap_c_imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("fap_c_unique")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fap_d_atualizado")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("fap_d_inclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("fap_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("fap_n_codigo");

                    b.ToTable("tb_fap_fotoApp");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fem_fotoEmpresa", b =>
                {
                    b.Property<int>("fem_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("fem_c_imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("fem_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("fem_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("fem_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fem_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("fem_n_codigo");

                    b.ToTable("tb_fem_fotoEmpresa");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fen_foto_entrega", b =>
                {
                    b.Property<int>("fen_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("fen_c_imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("fen_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("fen_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("fen_n_codigo")
                        .HasName("PK_fen_n_codigo");

                    b.ToTable("tb_fen_foto_entrega");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fer_feriado", b =>
                {
                    b.Property<int>("fer_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fer_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("fer_c_recorrente")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<Guid>("fer_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("fer_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("fer_d_data")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("fer_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fer_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("fer_n_codigoCliente")
                        .HasColumnType("int");

                    b.HasKey("fer_n_codigo")
                        .HasName("PK_feriado");

                    b.HasIndex("fer_n_codigoCliente");

                    b.ToTable("tb_fer_feriado");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fot_foto", b =>
                {
                    b.Property<int>("fot_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("fot_c_imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("fot_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("fot_c_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fot_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("fot_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fot_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("fot_d_upload")
                        .HasColumnType("datetime2");

                    b.HasKey("fot_n_codigo");

                    b.ToTable("tb_fot_foto");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fro_frota", b =>
                {
                    b.Property<int>("fro_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("fro_b_ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("fro_c_ano")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("fro_c_caracteristicas")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("fro_c_codigoVeiculo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("fro_c_cor")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("fro_c_modelo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("fro_c_placa")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("fro_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("fro_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("fro_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("fro_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("fro_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("fro_mav_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("fro_n_codigo")
                        .HasName("PK_tb_fro_frota");

                    b.HasIndex("fro_cli_n_codigo");

                    b.HasIndex("fro_mav_n_codigo");

                    b.ToTable("tb_fro_frota");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ftd_fotoDependencia", b =>
                {
                    b.Property<int>("ftd_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ftd_c_imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("ftd_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("ftd_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ftd_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ftd_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("ftd_n_codigo");

                    b.ToTable("tb_ftd_fotoDependencia");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fzk_tabelaHorarioFacialZK", b =>
                {
                    b.Property<int>("fzk_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("fzk_c_unique")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("fzk_con_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("fzk_d_atualizado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fzk_d_inclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fzk_d_modificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("fzk_disp_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("fzk_hor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("fzk_n_codigo");

                    b.HasIndex("fzk_con_n_codigo");

                    b.HasIndex("fzk_hor_n_codigo");

                    b.ToTable("tb_fzk_tabelaHorarioFacialZK");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_gpp_grupoPermissaoOperador", b =>
                {
                    b.Property<int>("gpp_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("gpp_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("gpp_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("gpp_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("gpp_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("gpp_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("gpp_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("gpp_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("gpp_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("gpp_emp_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("gpp_mol_n_codigo")
                        .HasColumnType("int");

                    b.Property<string>("gpp_pta_c_codigo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("gpp_n_codigo");

                    b.HasIndex("gpp_cli_n_codigo");

                    b.HasIndex("gpp_emp_n_codigo");

                    b.HasIndex("gpp_mol_n_codigo");

                    b.ToTable("tb_gpp_grupoPermissaoOperador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_gpv_grupoVagas", b =>
                {
                    b.Property<int>("gpv_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("gpv_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("gpv_c_perfil")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("gpv_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("gpv_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("gpv_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("gpv_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("gpv_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("gpv_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("gpv_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("gpv_n_numeroVagas")
                        .HasColumnType("int");

                    b.Property<int?>("gpv_n_vagasRestantes")
                        .HasColumnType("int");

                    b.Property<int?>("gpv_n_vagasUtilizadas")
                        .HasColumnType("int");

                    b.Property<int?>("gpv_phr_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("gpv_n_codigo");

                    b.HasIndex("gpv_cli_n_codigo");

                    b.HasIndex("gpv_phr_n_codigo");

                    b.ToTable("tb_gpv_grupoVagas");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", b =>
                {
                    b.Property<int>("grf_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("grf_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("grf_b_permiteHomeCare")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("grf_c_BlocoQuadra")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_LoteApto")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_autorizacaoPRO")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("grf_c_canal_principal")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_celular")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_cpf")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grf_c_nomeResponsavel")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("grf_c_nomeSalaComercial")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("grf_c_numeroVagas")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("grf_c_observacoesHomeCare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grf_c_rg")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_senhaApp")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("grf_c_status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_telefone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("grf_c_tipo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("grf_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("grf_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("grf_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("grf_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("grf_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("grf_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("grf_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("grf_fot_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("grf_n_ramal")
                        .HasColumnType("int");

                    b.HasKey("grf_n_codigo");

                    b.HasIndex("grf_ace_n_codigo");

                    b.HasIndex("grf_cli_n_codigo");

                    b.HasIndex("grf_fot_n_codigo");

                    b.ToTable("tb_grf_grupoFamiliar");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_gzk_grupoTabelaHorarioFacialZK", b =>
                {
                    b.Property<int>("gzk_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("gzk_c_unique")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("gzk_con_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("gzk_d_atualizado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("gzk_d_inclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("gzk_d_modificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("gzk_grupo_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("gzk_phr_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("gzk_n_codigo");

                    b.HasIndex("gzk_con_n_codigo");

                    b.HasIndex("gzk_phr_n_codigo");

                    b.ToTable("tb_gzk_grupoTabelaHorarioFacialZK");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_hdi_historicoDispositivo", b =>
                {
                    b.Property<int>("hdi_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hdi_c_mensagem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("hdi_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("hdi_con_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("hdi_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("hdi_d_data")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("hdi_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("hdi_n_codigo");

                    b.HasIndex("hdi_con_n_codigo");

                    b.ToTable("tb_hdi_historicoDispositivo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_hil_historicoLiberacao", b =>
                {
                    b.Property<int>("hil_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hil_c_nomeUsuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("hil_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("hil_c_status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("hil_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("hil_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("hil_d_data")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("hil_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("hil_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("hil_mor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("hil_n_codigo");

                    b.HasIndex("hil_mor_n_codigo");

                    b.ToTable("tb_hil_historicoLiberacao");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_hor_horario", b =>
                {
                    b.Property<int>("hor_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("hor_b_referenciaApp")
                        .HasColumnType("bit");

                    b.Property<string>("hor_c_diaSemana")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("hor_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("hor_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("hor_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("hor_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("hor_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("hor_d_inicia")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("hor_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<string>("hor_d_termina")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("hor_n_codigoLinear")
                        .HasColumnType("int");

                    b.HasKey("hor_n_codigo");

                    b.HasIndex("hor_cli_n_codigo");

                    b.ToTable("tb_hor_horario");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_inc_informacoesCliente", b =>
                {
                    b.Property<int>("inc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("inc_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("inc_c_titulo")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<Guid>("inc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("inc_cli_n_codigo")
                        .HasColumnType("int")
                        .IsUnicode(false);

                    b.Property<DateTime>("inc_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("inc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("inc_n_ordem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("inc_n_codigo")
                        .HasName("PK_inc_n_codigo");

                    b.HasIndex("inc_cli_n_codigo");

                    b.ToTable("tb_inc_informacoesCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lay_layout", b =>
                {
                    b.Property<int>("lay_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("lay_c_canais")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("lay_c_exibeLayout")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("lay_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("lay_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("lay_cla_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("lay_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("lay_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("lay_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("lay_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("lay_ddv_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("lay_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("lay_n_codigo");

                    b.HasIndex("lay_cla_n_codigo");

                    b.HasIndex("lay_cli_n_codigo");

                    b.HasIndex("lay_ddv_n_codigo");

                    b.ToTable("tb_lay_layout");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lbr_logBackupRestauracao", b =>
                {
                    b.Property<int>("lbr_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("lbr_b_status")
                        .HasColumnType("bit");

                    b.Property<string>("lbr_c_mensagem")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("lbr_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("lbr_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("lbr_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("lbr_d_fim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("lbr_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("lbr_d_inicio")
                        .HasColumnType("datetime");

                    b.HasKey("lbr_n_codigo");

                    b.HasIndex("lbr_cli_n_codigo");

                    b.ToTable("tb_lbr_logBackupRestauracao");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lca_localidadeCatalogo", b =>
                {
                    b.Property<int>("lca_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("lca_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("lca_cal_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("lca_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("lca_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("lca_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("lca_lcc_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("lca_n_codigo");

                    b.HasIndex("lca_cal_n_codigo");

                    b.HasIndex("lca_lcc_n_codigo");

                    b.ToTable("tb_lca_localidadeCatalogo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lcc_localidadeCliente", b =>
                {
                    b.Property<int>("lcc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("lcc_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("lcc_c_tipoLayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lcc_c_tipoLocalidade")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("lcc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("lcc_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("lcc_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("lcc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("lcc_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("lcc_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("lcc_n_codigo");

                    b.HasIndex("lcc_cli_n_codigo");

                    b.ToTable("tb_lcc_localidadeCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lcg_localidadeClienteGrupoFamiliar", b =>
                {
                    b.Property<int>("lcg_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("lcg_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("lcg_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("lcg_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("lcg_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("lcg_grf_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("lcg_lcc_n_codigoBlocoQuadra")
                        .HasColumnType("int");

                    b.Property<int?>("lcg_lcc_n_codigoLoteApto")
                        .HasColumnType("int");

                    b.Property<int>("lcg_n_vagas")
                        .HasColumnType("int");

                    b.HasKey("lcg_n_codigo");

                    b.HasIndex("lcg_grf_n_codigo");

                    b.HasIndex("lcg_lcc_n_codigoBlocoQuadra");

                    b.HasIndex("lcg_lcc_n_codigoLoteApto");

                    b.ToTable("tb_lcg_localidadeClienteGrupoFamiliar");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lid_liberacaoDelivery", b =>
                {
                    b.Property<int>("lid_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("lid_b_pendente")
                        .HasColumnType("bit");

                    b.Property<string>("lid_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("lid_c_nomeEmpresa")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("lid_c_token")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("lid_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("lid_cac_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("lid_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("lid_d_dataHora")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("lid_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("lid_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("lid_mor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("lid_n_codigo");

                    b.HasIndex("lid_mor_n_codigo");

                    b.ToTable("tb_lid_liberacaoDelivery");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lip_liberacaoPrestador", b =>
                {
                    b.Property<int>("lip_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("lip_b_entrou")
                        .HasColumnType("bit");

                    b.Property<bool?>("lip_b_pendente")
                        .HasColumnType("bit");

                    b.Property<bool>("lip_b_saiu")
                        .HasColumnType("bit");

                    b.Property<string>("lip_c_celular")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("lip_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("lip_c_rg")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("lip_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("lip_cac_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("lip_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("lip_d_dataEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("lip_d_dataHora")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("lip_d_dataSaida")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("lip_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("lip_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("lip_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("lip_n_duracao")
                        .HasColumnType("int");

                    b.Property<int?>("lip_n_duracaoAntes")
                        .HasColumnType("int");

                    b.HasKey("lip_n_codigo");

                    b.HasIndex("lip_mor_n_codigo");

                    b.ToTable("tb_lip_liberacaoPrestador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_liv_liberacaoVisitante", b =>
                {
                    b.Property<int>("liv_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("liv_b_entrou")
                        .HasColumnType("bit");

                    b.Property<bool?>("liv_b_pendente")
                        .HasColumnType("bit");

                    b.Property<bool>("liv_b_saiu")
                        .HasColumnType("bit");

                    b.Property<string>("liv_c_celular")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("liv_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("liv_c_rg")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("liv_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("liv_cac_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("liv_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("liv_d_dataEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("liv_d_dataHora")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("liv_d_dataSaida")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("liv_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("liv_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("liv_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("liv_vis_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("liv_visitante_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("liv_n_codigo");

                    b.HasIndex("liv_mor_n_codigo");

                    b.HasIndex("liv_vis_n_codigo");

                    b.HasIndex("liv_visitante_n_codigo");

                    b.ToTable("tb_liv_liberacaoVisitante");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lsm_logSMS", b =>
                {
                    b.Property<int>("lsm_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("lsm_c_nomeContato")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("lsm_c_numeroContato")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("lsm_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lsm_d_data")
                        .HasColumnType("datetime");

                    b.Property<int?>("lsm_mor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("lsm_n_codigo");

                    b.ToTable("tb_lsm_logSMS");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mav_marcaVeiculo", b =>
                {
                    b.Property<int>("mav_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("mav_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("mav_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("mav_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("mav_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("mav_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("mav_n_codigo")
                        .HasName("PK_tb_mrv_marcaVeiculo");

                    b.ToTable("tb_mav_marcaVeiculo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mch_monitoramentoControleAcesso_historico", b =>
                {
                    b.Property<int>("mch_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("mch_ate_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool>("mch_b_LimparEvento")
                        .HasColumnType("bit");

                    b.Property<bool>("mch_b_inOut")
                        .HasColumnType("bit");

                    b.Property<bool>("mch_b_panico")
                        .HasColumnType("bit");

                    b.Property<bool>("mch_b_panicoTratado")
                        .HasColumnType("bit");

                    b.Property<bool>("mch_b_pendenteVideo")
                        .HasColumnType("bit");

                    b.Property<bool>("mch_b_precisaAtendimento")
                        .HasColumnType("bit");

                    b.Property<bool>("mch_b_tipoPanico")
                        .HasColumnType("bit");

                    b.Property<string>("mch_c_UsuarioTratamentoPanico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_acao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_cardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_destino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_doorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_obsTratamentoPanico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_pontoAcesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_tipoEventoMotivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mch_c_tipoPessoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("mch_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("mch_c_usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("mch_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("mch_con_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("mch_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("mch_d_dataTratamentoPanico")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("mch_d_evento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("mch_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("mch_d_modificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("mch_fot_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("mch_n_h")
                        .HasColumnType("int");

                    b.Property<int>("mch_pec_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("mch_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("mch_n_codigo")
                        .HasName("PK_mch_monitoramentoControleAcesso_historico");

                    b.ToTable("tb_mch_monitoramentoControleAcesso_historico");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_moc_motivoOcorrenciaCliente", b =>
                {
                    b.Property<int>("moc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("moc_b_encerrar")
                        .HasColumnType("bit");

                    b.Property<string>("moc_c_descricao")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("moc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("moc_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("moc_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("moc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("moc_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("moc_n_codigo");

                    b.HasIndex("moc_cli_n_codigo");

                    b.ToTable("tb_moc_motivoOcorrenciaCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mol_modulosLiberados", b =>
                {
                    b.Property<int>("mol_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("mol_b_CFTV")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_MonitoriamentoPerimetral")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_OrdemServico")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_accessView")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_comboUsuarioGuard")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_connectGaren")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_connectPRO")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_connectSolutions")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_connectSync")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_controleDeAcesso")
                        .HasColumnType("bit");

                    b.Property<bool>("mol_b_portariaVirtual")
                        .HasColumnType("bit");

                    b.Property<Guid>("mol_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("mol_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("mol_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("mol_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("mol_n_codigo")
                        .HasName("PK_tb_mod_modulo");

                    b.ToTable("tb_mol_modulosLiberados");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mon_monitoramento", b =>
                {
                    b.Property<int>("mon_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("mon_ate_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("mon_b_exibido")
                        .HasColumnType("bit");

                    b.Property<bool?>("mon_b_limpaEvento")
                        .HasColumnType("bit");

                    b.Property<bool?>("mon_b_precisaAtendimento")
                        .HasColumnType("bit");

                    b.Property<string>("mon_c_motivo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mon_c_motivoConclusao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mon_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mon_c_observacaoConclusao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mon_c_pessoa")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mon_c_pessoaConclusao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mon_c_tipoPessoa")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mon_c_tipoPessoaConclusao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("mon_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("mon_cev_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("mon_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("mon_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("mon_d_dataEdicao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("mon_d_dataEvento")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("mon_d_dataEventoConclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("mon_d_dataExibicao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("mon_d_dataInsercao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("mon_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("mon_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("mon_eve_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("mon_n_codigoPessoa")
                        .HasColumnType("int");

                    b.Property<int>("mon_n_codigoPessoaConclusao")
                        .HasColumnType("int");

                    b.Property<int?>("mon_n_responsavel")
                        .HasColumnType("int");

                    b.Property<int?>("mon_n_responsavelConclusao")
                        .HasColumnType("int");

                    b.Property<int?>("mon_pec_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("mon_stm_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("mon_zoc_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("mon_n_codigo");

                    b.HasIndex("mon_cev_n_codigo");

                    b.HasIndex("mon_cli_n_codigo");

                    b.HasIndex("mon_eve_n_codigo");

                    b.HasIndex("mon_pec_n_codigo");

                    b.HasIndex("mon_stm_n_codigo");

                    b.HasIndex("mon_zoc_n_codigo");

                    b.HasIndex("mon_b_exibido", "mon_d_dataExibicao", "mon_zoc_n_codigo")
                        .HasName("IX_tb_mon_monitoramento");

                    b.ToTable("tb_mon_monitoramento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mor_Morador", b =>
                {
                    b.Property<int>("mor_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("mor_b_antpassback")
                        .HasColumnType("bit");

                    b.Property<bool?>("mor_b_ativoInativo")
                        .HasColumnType("bit");

                    b.Property<bool>("mor_b_inOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("mor_b_liberadoAntPassBack")
                        .HasColumnType("bit");

                    b.Property<bool?>("mor_b_notificacao")
                        .HasColumnType("bit");

                    b.Property<bool?>("mor_b_sindico")
                        .HasColumnType("bit");

                    b.Property<string>("mor_c_autorizacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_autorizacaoPRO")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_celular")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_codExternoFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mor_c_contraSenha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_cpf")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mor_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_perfil")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_ramal")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_rg")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_senhaAPPPro")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("mor_c_telefonePermitido")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("mor_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("mor_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("mor_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("mor_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("mor_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("mor_d_dataEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("mor_d_dataInclusaoIntegracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("mor_d_dataNascimento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("mor_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("mor_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("mor_fot_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("mor_fot_n_documento")
                        .HasColumnType("int");

                    b.Property<int?>("mor_grf_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("mor_n_codigo")
                        .HasName("pk_tb_mor_morador");

                    b.HasIndex("mor_cli_n_codigo");

                    b.HasIndex("mor_fot_n_codigo");

                    b.HasIndex("mor_fot_n_documento");

                    b.HasIndex("mor_grf_n_codigo");

                    b.ToTable("tb_mor_Morador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mos_moduloOrdemServicoLiberado", b =>
                {
                    b.Property<int>("mos_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("mos_b_AcompanharOS")
                        .HasColumnType("bit");

                    b.Property<bool>("mos_b_abirOS")
                        .HasColumnType("bit");

                    b.Property<bool>("mos_b_fecharOS")
                        .HasColumnType("bit");

                    b.Property<Guid>("mos_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("mos_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("mos_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("mos_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("mos_n_codigo");

                    b.ToTable("tb_mos_moduloOrdemServicoLiberado");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mpc_mapeamentoPontoAcesso", b =>
                {
                    b.Property<int>("mpc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("mpc_c_tempoGravacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("mpc_can_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("mpc_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("mpc_pta_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("mpc_n_codigo");

                    b.HasIndex("mpc_cli_n_codigo");

                    b.ToTable("tb_mpc_mapeamentoPontoAcesso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mve_movimentacaoVeiculo", b =>
                {
                    b.Property<int>("mve_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("mve_b_registroAutomatico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("mve_c_fluxo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("mve_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("mve_c_usuarioLogado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("mve_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("mve_d_dataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("mve_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("mve_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("mve_fro_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("mve_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("mve_n_quilometragem")
                        .HasColumnType("int");

                    b.HasKey("mve_n_codigo")
                        .HasName("PK_tb_mve_movimentacaoVeiculo");

                    b.HasIndex("mve_fro_n_codigo");

                    b.HasIndex("mve_mor_n_codigo");

                    b.ToTable("tb_mve_movimentacaoVeiculo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_nod_notificacaoDocumento", b =>
                {
                    b.Property<int>("nod_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("nod_b_processado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("nod_c_assunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nod_c_dataVencimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nod_c_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nod_c_nomeDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nod_c_nomeFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("nod_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("nod_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("nod_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("nod_n_codigo")
                        .HasName("PK_nod_n_codigo");

                    b.ToTable("tb_nod_notificacaoDocumento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_not_notificacao", b =>
                {
                    b.Property<int>("not_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("not_avi_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("not_avi_n_codigoEmpresa")
                        .HasColumnType("int");

                    b.Property<bool?>("not_b_lido")
                        .HasColumnType("bit");

                    b.Property<Guid>("not_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("not_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("not_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("not_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("not_emp_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("not_ope_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("not_n_codigo");

                    b.HasIndex("not_avi_n_codigo");

                    b.HasIndex("not_avi_n_codigoEmpresa");

                    b.HasIndex("not_ope_n_codigo");

                    b.ToTable("tb_not_notificacao");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_not_notificacaoApp", b =>
                {
                    b.Property<int>("not_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("not_b_enviar_app_pro")
                        .HasColumnType("bit");

                    b.Property<bool?>("not_b_excluido")
                        .HasColumnType("bit");

                    b.Property<bool>("not_b_lido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("not_b_pendente")
                        .HasColumnType("bit");

                    b.Property<bool>("not_b_tocado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("not_c_cor")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("not_c_mensagem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("not_c_origem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("not_c_retornoPush")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("not_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("not_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("not_d_data")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("not_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("not_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("not_eno_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("not_grf_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("not_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("not_zec_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("not_n_codigo");

                    b.HasIndex("not_eno_n_codigo");

                    b.HasIndex("not_zec_n_codigo");

                    b.ToTable("tb_not_notificacaoApp");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ope_operador", b =>
                {
                    b.Property<int>("ope_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ope_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("ope_b_admIconnect")
                        .HasColumnType("bit");

                    b.Property<bool?>("ope_b_ativoInativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("ope_b_solicitaRamal")
                        .HasColumnType("bit");

                    b.Property<bool?>("ope_b_todosClientes")
                        .HasColumnType("bit");

                    b.Property<string>("ope_c_bairro")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ope_c_cargo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ope_c_celular")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ope_c_cep")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ope_c_complemento")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ope_c_cpf")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("ope_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ope_c_email2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ope_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ope_c_numero")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ope_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ope_c_rg")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ope_c_rua")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ope_c_telefone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("ope_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ope_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("ope_cid_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ope_cli_n_atendimento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ope_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("ope_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ope_d_dataNascimento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ope_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ope_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ope_d_ultimoContato")
                        .HasColumnType("datetime");

                    b.Property<int?>("ope_emp_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ope_emp_n_codigo_ramal")
                        .HasColumnType("int");

                    b.Property<int?>("ope_est_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ope_gpp_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ope_mol_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("ope_pop_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("ope_n_codigo");

                    b.HasIndex("ope_ace_n_codigo");

                    b.HasIndex("ope_cid_n_codigo");

                    b.HasIndex("ope_emp_n_codigo");

                    b.HasIndex("ope_est_n_codigo");

                    b.HasIndex("ope_mol_n_codigo");

                    b.HasIndex("ope_pop_n_codigo");

                    b.ToTable("tb_ope_operador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_opl_operadorLocal", b =>
                {
                    b.Property<int>("opl_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("opl_c_cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opl_c_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opl_c_login")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("opl_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("opl_c_rg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opl_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("opl_c_telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("opl_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("opl_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("opl_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("opl_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("opl_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("opl_d_ultimoContato")
                        .HasColumnType("datetime");

                    b.Property<int?>("opl_gpp_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("opl_n_codigo");

                    b.HasIndex("opl_cli_n_codigo");

                    b.HasIndex("opl_gpp_n_codigo");

                    b.ToTable("tb_opl_operadorLocal");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_opo_operadorOnline", b =>
                {
                    b.Property<int>("opo_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("opo_b_online")
                        .HasColumnType("bit");

                    b.Property<int?>("opo_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("opo_opr_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("opo_n_codigo");

                    b.HasIndex("opo_cli_n_codigo");

                    b.ToTable("tb_opo_operadorOnline");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pan_panicoApp", b =>
                {
                    b.Property<int>("pan_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("pan_b_app_pro")
                        .HasColumnType("bit");

                    b.Property<bool?>("pan_b_pendente")
                        .HasColumnType("bit");

                    b.Property<Guid>("pan_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("pan_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pan_d_dataPanico")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("pan_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("pan_mor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("pan_n_codigo");

                    b.HasIndex("pan_mor_n_codigo");

                    b.ToTable("tb_pan_panicoApp");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_par_parametros", b =>
                {
                    b.Property<int>("par_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("par_b_interno")
                        .HasColumnType("bit");

                    b.Property<string>("par_c_aba")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("par_c_chave")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("par_c_descricao")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("par_c_titulo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<Guid>("par_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("par_c_valor")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("par_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("par_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("par_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("par_n_codigo");

                    b.ToTable("tb_par_parametros");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_par_parametrosEmpresa", b =>
                {
                    b.Property<int>("par_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("par_b_interno")
                        .HasColumnType("bit");

                    b.Property<string>("par_c_aba")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("par_c_chave")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("par_c_descricao")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("par_c_titulo")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<Guid>("par_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("par_c_valor")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("par_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("par_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("par_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("par_emp_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("par_n_codigo")
                        .HasName("PK_tb_par_parametrosEmpresaz");

                    b.HasIndex("par_emp_n_codigo");

                    b.ToTable("tb_par_parametrosEmpresa");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pec_permissaoCliente", b =>
                {
                    b.Property<int>("pec_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("pec_b_editaInformacoes")
                        .HasColumnType("bit");

                    b.Property<Guid>("pec_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("pec_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("pec_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("pec_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pec_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("pec_ope_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("pec_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("pec_n_codigo");

                    b.HasIndex("pec_cli_n_codigo");

                    b.HasIndex("pec_ope_n_codigo");

                    b.ToTable("tb_pec_permissaoCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pec_processoExclusaoCliente", b =>
                {
                    b.Property<int>("pec_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("pec_b_panico")
                        .HasColumnType("bit");

                    b.Property<string>("pec_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pec_c_tipo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("pec_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("pec_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("pec_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("pec_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pec_d_data")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("pec_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("pec_n_codigo")
                        .HasName("PK_Tb_pec_processoExclusaoCliente");

                    b.ToTable("tb_pec_processoExclusaoCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_per_per_perfilPermissionamento", b =>
                {
                    b.Property<Guid>("per_per_u_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("per_n_codigo")
                        .HasColumnType("int");

                    b.Property<Guid>("per_u_n_codigo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("tb_per_perfilper_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("per_per_u_codigo");

                    b.HasIndex("per_u_n_codigo");

                    b.HasIndex("tb_per_perfilper_n_codigo");

                    b.ToTable("tb_per_per_perfilPermissionamento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_per_perfil", b =>
                {
                    b.Property<int>("per_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("per_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("per_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("per_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("per_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("per_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("per_n_codigo")
                        .HasName("PK_tb_per_perfis");

                    b.ToTable("tb_per_perfil");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_per_perguntas", b =>
                {
                    b.Property<int>("per_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("per_c_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("per_c_pergunta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("per_c_resposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("per_c_titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("per_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("per_d_data")
                        .HasColumnType("datetime2");

                    b.HasKey("per_n_codigo")
                        .HasName("PK_per_n_codigo");

                    b.HasIndex("per_cli_n_codigo");

                    b.ToTable("tb_per_perguntas");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_per_permissionamento", b =>
                {
                    b.Property<Guid>("per_u_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("per_b_ativo")
                        .HasColumnType("bit");

                    b.Property<string>("per_c_chave")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("per_u_codigo");

                    b.ToTable("tb_per_permissionamento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_per_permissoes", b =>
                {
                    b.Property<int>("per_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("per_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("per_n_codigo");

                    b.ToTable("tb_per_permissoes");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pet_pet", b =>
                {
                    b.Property<int>("pet_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("pet_c_caracteristicas")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pet_c_cor")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("pet_c_foto")
                        .HasColumnType("bit");

                    b.Property<string>("pet_c_nome")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("pet_c_pelagem")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("pet_c_porte")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("pet_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("pet_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("pet_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pet_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("pet_fot_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("pet_grf_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("pet_rac_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("pet_n_codigo")
                        .HasName("PK_tb_vec_veiculo");

                    b.HasIndex("pet_fot_n_codigo");

                    b.HasIndex("pet_grf_n_codigo");

                    b.HasIndex("pet_rac_n_codigo");

                    b.ToTable("tb_pet_pet");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pgc_pgmCliente", b =>
                {
                    b.Property<int>("pgc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("pgc_c_nome")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("pgc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("pgc_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("pgc_cpg_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("pgc_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("pgc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("pgc_eqc_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("pgc_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("pgc_n_codigo");

                    b.HasIndex("pgc_cli_n_codigo");

                    b.HasIndex("pgc_cpg_n_codigo");

                    b.HasIndex("pgc_eqc_n_codigo", "pgc_cpg_n_codigo")
                        .IsUnique()
                        .HasName("IX_tb_pgc_pgmCliente");

                    b.ToTable("tb_pgc_pgmCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pgp_permissoesGrupo", b =>
                {
                    b.Property<int>("pgp_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("pgp_b_checado")
                        .HasColumnType("bit");

                    b.Property<Guid>("pgp_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("pgp_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("pgp_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pgp_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int>("pgp_gpp_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("pgp_top_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("pgp_n_codigo");

                    b.HasIndex("pgp_gpp_n_codigo");

                    b.HasIndex("pgp_top_n_codigo");

                    b.ToTable("tb_pgp_permissoesGrupo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_phr_perfilHorario", b =>
                {
                    b.Property<int>("phr_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("phr_b_antipassback")
                        .HasColumnType("bit");

                    b.Property<bool?>("phr_b_servico")
                        .HasColumnType("bit");

                    b.Property<bool?>("phr_b_visitante")
                        .HasColumnType("bit");

                    b.Property<string>("phr_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("phr_c_pontoAcesso")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("phr_c_status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("phr_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("phr_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("phr_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("phr_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("phr_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("phr_hor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("phr_n_codigo");

                    b.HasIndex("phr_cli_n_codigo");

                    b.HasIndex("phr_hor_n_codigo");

                    b.ToTable("tb_phr_perfilHorario");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_plc_pontoLayoutCliente", b =>
                {
                    b.Property<int>("plc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("plc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("plc_cla_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("plc_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("plc_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("plc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("plc_n_codigo");

                    b.HasIndex("plc_cla_n_codigo");

                    b.HasIndex("plc_cli_n_codigo");

                    b.ToTable("tb_plc_pontoLayoutCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_poa_portaAlarme", b =>
                {
                    b.Property<int>("poa_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("poa_c_porta")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("poa_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("poa_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("poa_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("poa_emp_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("poa_n_codigo")
                        .HasName("PK_tb_par_porta");

                    b.HasIndex("poa_emp_n_codigo");

                    b.ToTable("tb_poa_portaAlarme");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pop_perfilOperador", b =>
                {
                    b.Property<int>("pop_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("pop_c_nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("pop_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("pop_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("pop_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pop_d_modificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("pop_n_codigo");

                    b.ToTable("tb_pop_perfilOperador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_por_portasStream", b =>
                {
                    b.Property<int>("por_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("por_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("por_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("por_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("por_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("por_n_porta")
                        .HasColumnType("int");

                    b.Property<int?>("pro_n_process")
                        .HasColumnType("int");

                    b.HasKey("por_n_codigo");

                    b.HasIndex("por_cli_n_codigo");

                    b.ToTable("tb_por_portasStream");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pre_precos", b =>
                {
                    b.Property<int>("pre_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("pre_mol_c_nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pre_n_porcentCli")
                        .HasColumnType("int");

                    b.Property<int>("pre_n_porcentDist")
                        .HasColumnType("int");

                    b.Property<int>("pre_n_porcentEmp")
                        .HasColumnType("int");

                    b.Property<decimal>("pre_n_preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pre_n_precoCli")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pre_n_precoDist")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("pre_n_precoEmp")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("pre_n_codigo")
                        .HasName("PK_tb_pre_precos");

                    b.ToTable("tb_pre_precos");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pro_proprietario", b =>
                {
                    b.Property<int>("pro_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("pro_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("pro_b_tipoGaren")
                        .HasColumnType("bit");

                    b.Property<string>("pro_c_bairro")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pro_c_cargo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pro_c_celular")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("pro_c_cep")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("pro_c_complemento")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pro_c_cpf")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("pro_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pro_c_email2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("pro_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pro_c_numero")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("pro_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pro_c_rg")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("pro_c_rua")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pro_c_telefone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("pro_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("pro_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("pro_cid_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("pro_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("pro_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pro_d_dataNascimento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("pro_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pro_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("pro_est_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("pro_n_codigo");

                    b.HasIndex("pro_ace_n_codigo");

                    b.HasIndex("pro_cid_n_codigo");

                    b.HasIndex("pro_est_n_codigo");

                    b.ToTable("tb_pro_proprietario");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pse_prestadorServico", b =>
                {
                    b.Property<int>("pse_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("pse_b_ativoInativo")
                        .HasColumnType("bit");

                    b.Property<bool>("pse_b_gerou_atendimento")
                        .HasColumnType("bit");

                    b.Property<bool>("pse_b_inOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("pse_b_liberadoAntPassBack")
                        .HasColumnType("bit");

                    b.Property<bool?>("pse_b_panicoTratado")
                        .HasColumnType("bit");

                    b.Property<string>("pse_c_celular")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_codExternoPrestador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pse_c_corVeiculo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_cpf")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pse_c_localizacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_modeloVeiculo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_numeroCartao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_perfil")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_placaVeiculo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pse_c_rg")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("pse_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("pse_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("pse_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("pse_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("pse_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pse_d_dataEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("pse_d_dataExpriracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("pse_d_dataSaidaManual")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("pse_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pse_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("pse_fot_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("pse_fot_n_documento")
                        .HasColumnType("int");

                    b.Property<int?>("pse_gpv_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("pse_n_horarioAdicional")
                        .HasColumnType("int");

                    b.HasKey("pse_n_codigo");

                    b.HasIndex("pse_cli_n_codigo");

                    b.HasIndex("pse_fot_n_codigo");

                    b.HasIndex("pse_fot_n_documento");

                    b.HasIndex("pse_gpv_n_codigo");

                    b.ToTable("tb_pse_prestadorServico");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pta_pontosAcesso", b =>
                {
                    b.Property<int>("pta_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("pta_b_connectProGaren")
                        .HasColumnType("bit");

                    b.Property<bool?>("pta_b_desabilitaPrestador")
                        .HasColumnType("bit");

                    b.Property<bool?>("pta_b_desabilitaVisitante")
                        .HasColumnType("bit");

                    b.Property<bool>("pta_b_exibirEventosReleAuxiliar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("pta_b_refeicao")
                        .HasColumnType("bit");

                    b.Property<bool?>("pta_b_servico")
                        .HasColumnType("bit");

                    b.Property<bool?>("pta_b_status")
                        .HasColumnType("bit");

                    b.Property<bool?>("pta_b_visitante")
                        .HasColumnType("bit");

                    b.Property<string>("pta_c_descricaoReleAuxiliar")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("pta_c_fluxo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pta_c_nomePonto")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("pta_c_periodoMonitoramentoAte")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("pta_c_periodoMonitoramentoDe")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<Guid>("pta_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("pta_cla_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("pta_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("pta_con_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("pta_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("pta_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("pta_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("pta_lay_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("pta_n_indexPorta")
                        .HasColumnType("int");

                    b.HasKey("pta_n_codigo");

                    b.HasIndex("pta_cla_n_codigo");

                    b.HasIndex("pta_cli_n_codigo");

                    b.HasIndex("pta_con_n_codigo");

                    b.HasIndex("pta_lay_n_codigo");

                    b.ToTable("tb_pta_pontosAcesso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_rac_raca", b =>
                {
                    b.Property<int>("rac_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rac_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rac_c_tipo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("rac_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("rac_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("rac_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("rac_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("rac_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("rac_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("rac_n_codigo");

                    b.ToTable("tb_rac_raca");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ral_ramalLayout", b =>
                {
                    b.Property<int>("ral_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ral_c_ramal")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("ral_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("ral_cla_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ral_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ral_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ral_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("ral_lay_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("ral_n_codigo");

                    b.HasIndex("ral_cla_n_codigo");

                    b.HasIndex("ral_lay_n_codigo");

                    b.ToTable("tb_ral_ramalLayout");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ref_refeicao", b =>
                {
                    b.Property<int>("ref_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ref_c_nomeRefeicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ref_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ref_d_fim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ref_d_inicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("ref_d_valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ref_n_codigo");

                    b.HasIndex("ref_cli_n_codigo");

                    b.ToTable("tb_ref_refeicao");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_rel_responsavelLocacaoSaloes", b =>
                {
                    b.Property<int>("rel_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rel_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rel_c_login")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rel_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rel_c_origem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rel_c_permissao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rel_c_rg")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rel_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rel_c_sobreNome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rel_c_telefone")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("rel_c_tipo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("rel_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("rel_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("rel_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("rel_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("rel_usu_n_responsavel")
                        .HasColumnType("int");

                    b.HasKey("rel_n_codigo");

                    b.HasIndex("rel_cli_n_codigo");

                    b.ToTable("tb_rel_responsavelLocacaoSaloes");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_res_registroSalao", b =>
                {
                    b.Property<int>("res_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("res_b_lido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("res_b_tocado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("res_c_inTabelaUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("res_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("res_c_periodo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("res_c_status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("res_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("res_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("res_d_dataSolicitacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("res_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("res_dpn_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("res_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("res_n_inUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("res_n_codigo");

                    b.HasIndex("res_dpn_n_codigo");

                    b.HasIndex("res_mor_n_codigo");

                    b.ToTable("tb_res_registroSalao");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_rop_ramalOperador", b =>
                {
                    b.Property<int>("rop_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rop_c_ramal")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("rop_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("rop_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("rop_d_data")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("rop_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("rop_ope_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("rop_n_codigo");

                    b.HasIndex("rop_ope_n_codigo");

                    b.ToTable("tb_rop_ramalOperador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_scc_subCategoriaCatalogo", b =>
                {
                    b.Property<int>("scc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("scc_b_ativo")
                        .HasColumnType("bit");

                    b.Property<string>("scc_c_imagem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("scc_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("scc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("scc_cat_n_codigo")
                        .HasColumnType("int");

                    b.Property<int>("scc_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("scc_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("scc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("scc_n_codigo");

                    b.HasIndex("scc_cat_n_codigo");

                    b.ToTable("tb_scc_subCategoriaCatalogo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_seb_serviceBroker", b =>
                {
                    b.Property<int>("seb_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("seb_c_ramaldestino")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("seb_c_ramalorigem")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("seb_c_tabelaOrigem")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("seb_c_tipoUsuario")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("seb_c_usuarios")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<int?>("seb_cli_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("seb_n_codigo");

                    b.ToTable("tb_seb_serviceBroker");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_sin_sincronizacaoOffline", b =>
                {
                    b.Property<int>("sin_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SIN_CLI_N_CODIGO")
                        .HasColumnType("int");

                    b.Property<bool?>("sin_b_concluida")
                        .HasColumnType("bit");

                    b.Property<bool>("sin_b_sincronizacaoRestauracao")
                        .HasColumnType("bit");

                    b.Property<DateTime>("sin_d_data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("sin_n_codigo");

                    b.ToTable("tb_sin_sincronizacaoOffline");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_sin_sincronizacaoPlacas", b =>
                {
                    b.Property<int>("sin_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("sin_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("sin_b_interno")
                        .HasColumnType("bit");

                    b.Property<string>("sin_c_controladoras")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("sin_c_erro")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("sin_c_status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("sin_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("sin_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("sin_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("sin_d_dataFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("sin_d_dataInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("sin_d_dataSolicitacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("sin_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("sin_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("sin_n_codigo");

                    b.HasIndex("sin_cli_n_codigo");

                    b.ToTable("tb_sin_sincronizacaoPlacas");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_sol_solicitacaoAberturaRemota", b =>
                {
                    b.Property<int>("sol_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("sol_c_tipoUsuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("sol_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("sol_c_usuarioSolicitou")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("sol_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("sol_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("sol_d_data")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("sol_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("sol_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("sol_pta_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("sol_usu_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("sol_n_codigo");

                    b.ToTable("tb_sol_solicitacaoAberturaRemota");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_soz_solicitarZelador", b =>
                {
                    b.Property<int>("soz_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("soz_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("soz_c_resposta")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("soz_c_status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("soz_c_tipo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("soz_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("soz_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("soz_d_dataSolicitacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("soz_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("soz_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("soz_fap_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("soz_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("soz_n_fila")
                        .HasColumnType("int");

                    b.HasKey("soz_n_codigo");

                    b.HasIndex("soz_fap_n_codigo");

                    b.HasIndex("soz_mor_n_codigo");

                    b.ToTable("tb_soz_solicitarZelador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_stm_statusMonitoramento", b =>
                {
                    b.Property<int>("stm_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("stm_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("stm_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("stm_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("stm_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("stm_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("stm_n_codigo");

                    b.ToTable("tb_stm_statusMonitoramento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_tcl_tipoCliente", b =>
                {
                    b.Property<int>("tcl_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("tcl_b_ativo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("tcl_c_nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<Guid>("tcl_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("tcl_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("tcl_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("tcl_n_codigo");

                    b.ToTable("tb_tcl_tipoCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_top_tipoPermissaoOperador", b =>
                {
                    b.Property<int>("top_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("top_c_chave")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("top_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("top_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("top_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("top_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("top_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("top_n_codigo");

                    b.ToTable("tb_top_tipoPermissaoOperador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_tpa_tipoAtendimento", b =>
                {
                    b.Property<int>("tpa_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tpa_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("tpa_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("tpa_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("tpa_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("tpa_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("tpa_n_prioridade")
                        .HasColumnType("int");

                    b.HasKey("tpa_n_codigo");

                    b.ToTable("tb_tpa_tipoAtendimento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_upa_uploadAPK", b =>
                {
                    b.Property<int>("upa_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("upa_c_arquivo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("upa_c_nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("upa_c_unique")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("upa_c_usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("upa_d_inclusao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("upa_n_versaoCode")
                        .HasColumnType("int");

                    b.Property<string>("upa_n_versaoName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("upa_n_codigo");

                    b.ToTable("tb_upa_uploadAPK");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_upe_usuarioAPPpermissao", b =>
                {
                    b.Property<int>("upe_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("upe_b_acessa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("upe_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("upe_per_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("upe_n_codigo");

                    b.HasIndex("upe_mor_n_codigo");

                    b.HasIndex("upe_per_n_codigo");

                    b.ToTable("tb_upe_usuarioAPPpermissao");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_usc_usuarioSalaComercial", b =>
                {
                    b.Property<int>("usc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("usc_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<string>("usc_c_cpf")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("usc_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("usc_c_perfil")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("usc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("usc_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("usc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("usc_grf_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("usc_mor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("usc_n_codigo");

                    b.HasIndex("usc_ace_n_codigo");

                    b.HasIndex("usc_grf_n_codigo");

                    b.HasIndex("usc_mor_n_codigo");

                    b.ToTable("tb_usc_usuarioSalaComercial");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_usu_UsuarioApp", b =>
                {
                    b.Property<int>("usu_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("usu_b_liberado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("usu_c_codigoRecuperacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("usu_c_condominio")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("usu_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("usu_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("usu_c_rg")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("usu_c_senha")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("usu_c_telefone")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("usu_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("usu_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("usu_d_dataInclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("usu_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("usu_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("usu_mor_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("usu_n_codigo");

                    b.HasIndex("usu_mor_n_codigo");

                    b.ToTable("tb_usu_UsuarioApp");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vap_versaoApp", b =>
                {
                    b.Property<int>("vap_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("vap_c_apk")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("vap_c_numeroVersao")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("vap_d_dataInclusao")
                        .HasColumnType("datetime2");

                    b.HasKey("vap_n_codigo")
                        .HasName("PK_tb_vap_versaoApp");

                    b.ToTable("tb_vap_versaoApp");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vec_veiculo", b =>
                {
                    b.Property<int>("vec_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("vec_c_caracteristicas")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vec_c_cor")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("vec_c_modelo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("vec_c_placa")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("vec_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("vec_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("vec_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("vec_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("vec_grf_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("vec_mav_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("vec_n_codigo")
                        .HasName("PK_tb_vec_veiculo_1");

                    b.HasIndex("vec_grf_n_codigo");

                    b.HasIndex("vec_mav_n_codigo");

                    b.ToTable("tb_vec_veiculo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vic_vigilanteCliente", b =>
                {
                    b.Property<int>("vic_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("vic_c_celular")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vic_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("vic_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("vic_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("vic_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("vic_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("vic_d_modificacao")
                        .HasColumnType("datetime");

                    b.HasKey("vic_n_codigo");

                    b.HasIndex("vic_cli_n_codigo");

                    b.ToTable("tb_vic_vigilanteCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vid_video", b =>
                {
                    b.Property<int>("vid_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("vid_c_link")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vid_c_status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("vid_con_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("vid_n_codigo");

                    b.HasIndex("vid_con_n_codigo");

                    b.ToTable("tb_vid_video");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vis_visitante", b =>
                {
                    b.Property<int>("vis_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("vis_b_ativoInativo")
                        .HasColumnType("bit");

                    b.Property<bool>("vis_b_inOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("vis_b_liberadoAntPassBack")
                        .HasColumnType("bit");

                    b.Property<string>("vis_c_celular")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("vis_c_codExternoVisitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vis_c_corVeiculo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vis_c_cpf")
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14)
                        .IsUnicode(false);

                    b.Property<string>("vis_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vis_c_estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vis_c_localizacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vis_c_modeloVeiculo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vis_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vis_c_numeroCartao")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("vis_c_observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vis_c_perfil")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("vis_c_placaVeiculo")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("vis_c_rg")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("vis_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("vis_c_usuario")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("vis_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("vis_d_alteracao")
                        .HasColumnType("date");

                    b.Property<DateTime>("vis_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("vis_d_dataEntrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("vis_d_dataExpriracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("vis_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("vis_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("vis_fot_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("vis_fot_n_documento")
                        .HasColumnType("int");

                    b.Property<int?>("vis_gpv_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("vis_vpp_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("vis_n_codigo");

                    b.HasIndex("vis_cli_n_codigo");

                    b.HasIndex("vis_fot_n_codigo");

                    b.HasIndex("vis_fot_n_documento");

                    b.HasIndex("vis_gpv_n_codigo");

                    b.HasIndex("vis_vpp_n_codigo")
                        .IsUnique()
                        .HasFilter("[vis_vpp_n_codigo] IS NOT NULL");

                    b.ToTable("tb_vis_visitante");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vis_visitasApp", b =>
                {
                    b.Property<int>("vis_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("vis_age_n_codigo")
                        .HasColumnType("int");

                    b.Property<string>("vis_c_descricao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("vis_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("vis_cev_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("vis_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("vis_d_dataHora")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("vis_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("vis_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("vis_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("vis_n_duracao")
                        .HasColumnType("int");

                    b.Property<int?>("vis_n_duracaoAntes")
                        .HasColumnType("int");

                    b.Property<int?>("vis_n_quantidade")
                        .HasColumnType("int");

                    b.HasKey("vis_n_codigo");

                    b.HasIndex("vis_age_n_codigo");

                    b.HasIndex("vis_cev_n_codigo");

                    b.HasIndex("vis_mor_n_codigo");

                    b.ToTable("tb_vis_visitasApp");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_voi_voip", b =>
                {
                    b.Property<int>("voi_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("voi_b_pendente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("voi_c_json")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("voi_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("voi_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("voi_d_data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("voi_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("voi_n_codigo");

                    b.ToTable("tb_voi_voip");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vpp_visitanteApp", b =>
                {
                    b.Property<int>("vpp_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("vpp_c_codigoRecuperacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vpp_c_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vpp_c_senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("vpp_c_visitanteGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("vpp_n_codigo");

                    b.HasIndex("vpp_c_visitanteGuid");

                    b.ToTable("tb_vpp_visitanteApp");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_zec_zeladorCliente", b =>
                {
                    b.Property<int>("zec_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("zec_ace_n_codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("zec_b_notificacao")
                        .HasColumnType("bit");

                    b.Property<string>("zec_c_autorizacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("zec_c_email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("zec_c_nome")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("zec_c_perfil")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("zec_c_rg")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("zec_c_telefone")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("zec_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("zec_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("zec_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("zec_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("zec_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("zec_mol_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("zec_mor_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("zec_mos_n_codigo")
                        .HasColumnType("int");

                    b.HasKey("zec_n_codigo");

                    b.HasIndex("zec_ace_n_codigo");

                    b.HasIndex("zec_cli_n_codigo");

                    b.HasIndex("zec_mol_n_codigo");

                    b.HasIndex("zec_mor_n_codigo");

                    b.HasIndex("zec_mos_n_codigo");

                    b.ToTable("tb_zec_zeladorCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_zoc_zoneamentoCliente", b =>
                {
                    b.Property<int>("zoc_n_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("zoc_c_nomePonto")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("zoc_c_tipoSensor")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<Guid>("zoc_c_unique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("zoc_c_zona")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("zoc_cla_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("zoc_cli_n_codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("zoc_d_atualizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("zoc_d_inclusao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("zoc_d_modificacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("zoc_eqc_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("zoc_lay_n_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("zoc_n_TemporizadorDisparo")
                        .HasColumnType("int");

                    b.HasKey("zoc_n_codigo");

                    b.HasIndex("zoc_cla_n_codigo");

                    b.HasIndex("zoc_cli_n_codigo");

                    b.HasIndex("zoc_eqc_n_codigo");

                    b.HasIndex("zoc_lay_n_codigo");

                    b.ToTable("tb_zoc_zoneamentoCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_aba_agendaBackupAutomatico", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "tb_cli_cliente")
                        .WithMany("tb_aba_agendaBackupAutomatico")
                        .HasForeignKey("aba_cli_n_codigo")
                        .HasConstraintName("FK_tb_aba_agendaBackupAutomatico_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ace_acesso", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_dis_distribuidor", "tb_dis_distribuidor")
                        .WithMany("tb_ace_acesso")
                        .HasForeignKey("ace_dis_n_codigo")
                        .HasConstraintName("FK_tb_ace_acesso_tb_dis_distribuidor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_emp_empresa", "tb_emp_empresa")
                        .WithMany("tb_ace_acesso")
                        .HasForeignKey("ace_emp_n_codigo")
                        .HasConstraintName("FK_tb_ace_acesso_tb_emp_empresa")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_per_perfil", "tb_per_perfil")
                        .WithMany("tb_ace_acesso")
                        .HasForeignKey("ace_per_n_codigo")
                        .HasConstraintName("FK_tb_ace_acesso_tb_per_perfil")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ace_per_acessoPermissionamento", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_per_permissionamento", "tb_per_permissionamento")
                        .WithMany("tb_ace_per_acessoPermissionamento")
                        .HasForeignKey("per_u_n_codigo")
                        .HasConstraintName("FK_tb_ace_per_acessoPermissionamento_tb_per_permissionamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ace_acesso", "tb_ace_acesso")
                        .WithMany()
                        .HasForeignKey("tb_ace_acessoace_n_codigo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_aco_acompanhante", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_age_agenda", "aco_age_n_codigoNavigation")
                        .WithMany("tb_aco_acompanhante")
                        .HasForeignKey("aco_age_n_codigo")
                        .HasConstraintName("FK_tb_aco_acompanhante_tb_age_agenda");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_vis_visitante", "aco_vis_n_codigoNavigation")
                        .WithMany("tb_aco_acompanhante")
                        .HasForeignKey("aco_vis_n_codigo")
                        .HasConstraintName("FK_tb_aco_acompanhante_tb_vis_visitante");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_afa_afastamento", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "afa_mor_n_codigoNavigation")
                        .WithMany("tb_afa_afastamento")
                        .HasForeignKey("afa_mor_n_codigo")
                        .HasConstraintName("tb_afa_afastamento_tb_mor_morador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_age_agenda", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cal_catalogo", "age_cal_n_codigoNavigation")
                        .WithMany("tb_age_agenda")
                        .HasForeignKey("age_cal_n_codigo")
                        .HasConstraintName("FK_tb_age_agenda_tb_cal_catalogo");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", "age_grf_n_codigoNavigation")
                        .WithMany("tb_age_agenda")
                        .HasForeignKey("age_grf_n_codigo")
                        .HasConstraintName("FK_tb_age_agenda_tb_grf_grupoFamiliar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "age_mor_n_codigoNavigation")
                        .WithMany("tb_age_agenda")
                        .HasForeignKey("age_mor_n_codigo")
                        .HasConstraintName("FK_tb_age_agenda_tb_mor_Morador");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_vis_visitante", "age_vis_n_codigoNavigation")
                        .WithMany("tb_age_agenda")
                        .HasForeignKey("age_vis_n_codigo")
                        .HasConstraintName("FK_tb_age_agenda_tb_vis_visitante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_age_agenteComercial", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ace_acesso", "age_ace_n_codigoNavigation")
                        .WithMany("tb_age_agenteComercial")
                        .HasForeignKey("age_ace_n_codigo")
                        .HasConstraintName("FK_tb_age_agenteComercial_tb_ace_acesso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_apa_aplicacoesAlarme", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_emp_empresa", "tb_emp_empresa")
                        .WithMany("tb_apa_aplicacoesAlarme")
                        .HasForeignKey("apa_emp_n_codigo")
                        .HasConstraintName("FK_tb_apa_aplicacoesAlarme_tb_emp_empresa");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ate_atendimento", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "tb_cli_cliente")
                        .WithMany("tb_ate_atendimento")
                        .HasForeignKey("ate_cli_n_codigo")
                        .HasConstraintName("FK_tb_ate_atendimento_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ope_operador", "ate_ope_n_preferencialNavigation")
                        .WithMany("tb_ate_atendimento")
                        .HasForeignKey("ate_ope_n_preferencial")
                        .HasConstraintName("FK_tb_ate_atendimento_tb_ope_operador");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_pec_processoExclusaoCliente", "ate_pec_n_codigoNavigation")
                        .WithMany("tb_ate_atendimento")
                        .HasForeignKey("ate_pec_n_codigo")
                        .HasConstraintName("FK_tb_ate_atendimento_tb_pec_processoExclusaoCliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_tpa_tipoAtendimento", "ate_tpa_n_codigoNavigation")
                        .WithMany("tb_ate_atendimento")
                        .HasForeignKey("ate_tpa_n_codigo")
                        .HasConstraintName("FK_tb_ate_atendimento_tb_tpa_tipoAtendimento");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avg_avisoGrupoFamiliar", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cav_categorizacaoAviso", "avg_cav_n_codigoNavigation")
                        .WithMany("tb_avg_avisoGrupoFamiliar")
                        .HasForeignKey("avg_cav_n_codigo")
                        .HasConstraintName("FK_tb_avg_avisoGrupoFamiliar_tb_cav_categorizacaoAviso");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", "avg_grf_n_codigoNavigation")
                        .WithMany("tb_avg_avisoGrupoFamiliar")
                        .HasForeignKey("avg_grf_n_codigo")
                        .HasConstraintName("FK_tb_avg_avisoGrupoFamiliar_tb_grf_grupoFamiliar")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avi_aviso", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ace_acesso", "avi_ace_n_codigoNavigation")
                        .WithMany("tb_avi_aviso")
                        .HasForeignKey("avi_ace_n_codigo")
                        .HasConstraintName("FK_tb_avi_aviso_tb_ace_acesso");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_emp_empresa", "avi_emp_n_codigoNavigation")
                        .WithMany("tb_avi_aviso")
                        .HasForeignKey("avi_emp_n_codigo")
                        .HasConstraintName("FK_tb_avi_aviso_tb_emp_empresa");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avi_avisoMorador", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ace_acesso", "avm_ace_n_codigoNavigation")
                        .WithMany("tb_avi_avisoMorador")
                        .HasForeignKey("avm_ace_n_codigo")
                        .HasConstraintName("FK_tb_avi_avisoMorador_tb_ace_acesso");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cav_categorizacaoAviso", "avm_cav_n_codigoNavigation")
                        .WithMany("tb_avi_avisoMorador")
                        .HasForeignKey("avm_cav_n_codigo")
                        .HasConstraintName("FK_tb_avi_avisoMorador_tb_cav_categorizacaoAviso");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "avm_mor_n_codigoNavigation")
                        .WithMany("tb_avi_avisoMorador")
                        .HasForeignKey("avm_mor_n_codigo")
                        .HasConstraintName("FK_tb_avi_avisoMorador_tb_mor_Morador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avp_avisoPrestador", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cav_categorizacaoAviso", "avp_cav_n_codigoNavigation")
                        .WithMany("tb_avp_avisoPrestador")
                        .HasForeignKey("avp_cav_n_codigo")
                        .HasConstraintName("FK_tb_avp_avisoPrestador_tb_cav_categorizacaoAviso");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_pse_prestadorServico", "avp_pse_n_codigoNavigation")
                        .WithMany("tb_avp_avisoPrestador")
                        .HasForeignKey("avp_pse_n_codigo")
                        .HasConstraintName("FK_tb_avp_avisoPrestador_tb_pse_prestadorServico")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_avv_avisoVisitante", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cav_categorizacaoAviso", "avv_cav_n_codigoNavigation")
                        .WithMany("tb_avv_avisoVisitante")
                        .HasForeignKey("avv_cav_n_codigo")
                        .HasConstraintName("FK_tb_avv_avisoVisitante_tb_cav_categorizacaoAviso");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_vis_visitante", "avv_vis_n_codigoNavigation")
                        .WithMany("tb_avv_avisoVisitante")
                        .HasForeignKey("avv_vis_n_codigo")
                        .HasConstraintName("FK_tb_avv_avisoVisitante_tb_vis_visitante")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_bio_biometria", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "bio_cli_n_codigoNavigation")
                        .WithMany("tb_bio_biometria")
                        .HasForeignKey("bio_cli_n_codigo")
                        .HasConstraintName("FK_tb_bio_biometria_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_con_controladora", "bio_con_n_codigoNavigation")
                        .WithMany("tb_bio_biometria")
                        .HasForeignKey("bio_con_n_codigo")
                        .HasConstraintName("FK_tb_bio_biometria_tb_con_controladora");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cac_controleAcesso", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "cac_mor_n_codigoNavigation")
                        .WithMany("tb_cac_controleAcesso")
                        .HasForeignKey("cac_mor_n_codigo")
                        .HasConstraintName("FK_tb_cac_controleAcesso_tb_mor_Morador")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_pse_prestadorServico", "cac_pse_n_codigoNavigation")
                        .WithMany("tb_cac_controleAcesso")
                        .HasForeignKey("cac_pse_n_codigo")
                        .HasConstraintName("FK_tb_cac_controleAcesso_tb_pse_prestadorServico")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_vis_visitante", "cac_vis_n_codigoNavigation")
                        .WithMany("tb_cac_controleAcesso")
                        .HasForeignKey("cac_vis_n_codigo")
                        .HasConstraintName("FK_tb_cac_controleAcesso_tb_vis_visitante")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cac_controleAplicacoesCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_con_controladora", "cac_con_n_codigoNavigation")
                        .WithMany("tb_cac_controleAplicacoesCliente")
                        .HasForeignKey("cac_con_n_codigo")
                        .HasConstraintName("FK_tb_cac_controleAplicacoesCliente_tb_con_controladora")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cae_controleAcessoExcluido", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_con_controladora", "cae_con_n_codigoNavigation")
                        .WithMany("tb_cae_controleAcessoExcluido")
                        .HasForeignKey("cae_con_n_codigo")
                        .HasConstraintName("FK_tb_cae_controleAcessoExcluido_tb_con_controladora")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cal_catalogo", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fot_foto", "cal_fot_n_codigoNavigation")
                        .WithOne("tb_cal_catalogo")
                        .HasForeignKey("Iconnect.Infraestrutura.Models.tb_cal_catalogo", "cal_fot_n_codigo")
                        .HasConstraintName("FK_tb_cal_catalogo_tb_fot_foto")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", "cal_grf_n_codigoNavigation")
                        .WithMany("tb_cal_catalogo")
                        .HasForeignKey("cal_grf_n_codigo")
                        .HasConstraintName("FK_tb_cal_catalogo_tb_grf_grupoFamiliar");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_scc_subCategoriaCatalogo", "cal_scc_n_codigoNavigation")
                        .WithMany("tb_cal_catalogo")
                        .HasForeignKey("cal_scc_n_codigo")
                        .HasConstraintName("FK_tb_cal_catalogo_tb_scc_subCategoriaCatalogo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_can_canalLayout", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_lay_layout", "can_lay_n_codigoNavigation")
                        .WithMany("tb_can_canalLayout")
                        .HasForeignKey("can_lay_n_codigo")
                        .HasConstraintName("FK_tb_can_canalLayout_tb_lay_layout")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cat_categoriaCatalogo", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "cat_cli_n_codigoNavigation")
                        .WithMany("tb_cat_categoriaCatalogo")
                        .HasForeignKey("cat_cli_n_codigo")
                        .HasConstraintName("FK_tb_cat_categoriaCatalogo_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cde_cadastro_entregas", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fen_foto_entrega", "cde_fen_n_codigoNavigation")
                        .WithMany("tb_cde_cadastro_entregas")
                        .HasForeignKey("cde_fen_n_codigo")
                        .HasConstraintName("FK_tb_cde_cadastro_entregas_tb_fen_foto_entrega");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", "cde_grf_n_codigoNavigation")
                        .WithMany("tb_cde_cadastro_entregas")
                        .HasForeignKey("cde_grf_n_codigo")
                        .HasConstraintName("FK_tb_cde_cadastro_entregas_tb_grf_grupoFamiliar");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cev_categorizacaoEvento", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cev_categorizacaoEvento", "cev_cev_n_temporizadorNavigation")
                        .WithMany("Inversecev_cev_n_temporizadorNavigation")
                        .HasForeignKey("cev_cev_n_temporizador")
                        .HasConstraintName("FK_tb_cev_categorizacaoEvento_tb_cev_categorizacaoEvento1");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cha_chavesDeAcesso", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_lid_liberacaoDelivery", "cha_lid_n_codigoNavigation")
                        .WithMany("tb_cha_chavesDeAcesso")
                        .HasForeignKey("cha_lid_n_codigo")
                        .HasConstraintName("FK_tb_cha_chavesDeAcesso_tb_lid_liberacaoDelivery")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_lip_liberacaoPrestador", "cha_lip_n_codigoNavigation")
                        .WithMany("tb_cha_chavesDeAcesso")
                        .HasForeignKey("cha_lip_n_codigo")
                        .HasConstraintName("FK_tb_cha_chavesDeAcesso_tb_lip_liberacaoPrestador")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_liv_liberacaoVisitante", "cha_liv_n_codigoNavigation")
                        .WithMany("tb_cha_chavesDeAcesso")
                        .HasForeignKey("cha_liv_n_codigo")
                        .HasConstraintName("FK_tb_cha_chavesDeAcesso_tb_liv_liberacaoVisitante")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cid_cidade", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_est_estado", "cid_est_n_codigoNavigation")
                        .WithMany("tb_cid_cidade")
                        .HasForeignKey("cid_est_n_codigo")
                        .HasConstraintName("FK_tb_cid_cidade_tb_est_estado");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cla_cabecalhoLayout", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "cla_cli_n_codigoNavigation")
                        .WithMany("tb_cla_cabecalhoLayout")
                        .HasForeignKey("cla_cli_n_codigo")
                        .HasConstraintName("FK_tb_cla_cabecalhoLayout_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_cli_cliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_can_canalLayout", "cli_can_n_accessNavigation")
                        .WithMany("tb_cli_cliente")
                        .HasForeignKey("cli_can_n_access")
                        .HasConstraintName("FK_tb_cli_cliente_tb_can_canalLayout");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cid_cidade", "cli_cid_n_codigoNavigation")
                        .WithMany("tb_cli_cliente")
                        .HasForeignKey("cli_cid_n_codigo")
                        .HasConstraintName("FK_tb_cli_cliente_tb_cid_cidade");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_emp_empresa", "cli_emp_n_codigoNavigation")
                        .WithMany("tb_cli_cliente")
                        .HasForeignKey("cli_emp_n_codigo")
                        .HasConstraintName("FK_tb_cli_cliente_tb_emp_empresa");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_est_estado", "cli_est_n_codigoNavigation")
                        .WithMany("tb_cli_cliente")
                        .HasForeignKey("cli_est_n_codigo")
                        .HasConstraintName("FK_tb_cli_cliente_tb_est_estado");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mol_modulosLiberados", "cli_mol_n_codigoNavigation")
                        .WithMany("tb_cli_cliente")
                        .HasForeignKey("cli_mol_n_codigo")
                        .HasConstraintName("FK_tb_cli_cliente_tb_mol_modulosLiberados");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_tcl_tipoCliente", "cli_tcl_n_codigoNavigation")
                        .WithMany("tb_cli_cliente")
                        .HasForeignKey("cli_tcl_n_codigo")
                        .HasConstraintName("FK_tb_cli_cliente_tb_tcl_tipoCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_con_controladora", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "con_cli_n_codigoNavigation")
                        .WithMany("tb_con_controladora")
                        .HasForeignKey("con_cli_n_codigo")
                        .HasConstraintName("FK_tb_con_controladora_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_con_monitoramentoControleAcesso", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "con_cli_n_codigoNavigation")
                        .WithMany("tb_con_monitoramentoControleAcesso")
                        .HasForeignKey("con_cli_n_codigo")
                        .HasConstraintName("FK_tb_con_monitoramentoControleAcesso_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_pec_processoExclusaoCliente", "con_pec_n_codigoNavigation")
                        .WithMany("tb_con_monitoramentoControleAcesso")
                        .HasForeignKey("con_pec_n_codigo")
                        .HasConstraintName("FK_tb_con_monitoramentoControleAcesso_tb_pec_processoExclusaoCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ddv_dispositivoDVRCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "ddv_cli_n_codigoNavigation")
                        .WithMany("tb_ddv_dispositivoDVRCliente")
                        .HasForeignKey("ddv_cli_n_codigo")
                        .HasConstraintName("FK_tb_ddv_dispositivoDVRCliente_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dev_device", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_vpp_visitanteApp", "tb_vpp_visitanteApp")
                        .WithMany("tb_dev_device")
                        .HasForeignKey("dev_vpp_n_visitanteApp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dis_distribuidor", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cid_cidade", "dis_cid_n_codigoNavigation")
                        .WithMany("tb_dis_distribuidor")
                        .HasForeignKey("dis_cid_n_codigo")
                        .HasConstraintName("FK_tb_dis_distribuidor_tb_cid_cidade");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_est_estado", "dis_est_n_codigoNavigation")
                        .WithMany("tb_dis_distribuidor")
                        .HasForeignKey("dis_est_n_codigo")
                        .HasConstraintName("FK_tb_dis_distribuidor_tb_est_estado");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dmo_documentoMorador", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_doc_documento", "dmo_doc_n_codigoNavigation")
                        .WithMany("tb_dmo_documentoMorador")
                        .HasForeignKey("dmo_doc_n_codigo")
                        .HasConstraintName("FK_tb_dmo_documentoMorador_tb_doc_documento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "dmo_mor_n_codigoNavigation")
                        .WithMany("tb_dmo_documentoMorador")
                        .HasForeignKey("dmo_mor_n_codigo")
                        .HasConstraintName("FK_tb_dmo_documentoMorador_tb_mor_Morador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_doc_documento", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "doc_cli_n_codigoNavigation")
                        .WithMany("tb_doc_documento")
                        .HasForeignKey("doc_cli_n_codigo")
                        .HasConstraintName("FK_tb_doc_documento_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dow_downloads_arquivos", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "dow_cli_n_codigoNavigation")
                        .WithMany("tb_dow_downloads_arquivos")
                        .HasForeignKey("dow_cli_n_codigo")
                        .HasConstraintName("FK_tb_dow_downloads_arquivos_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dpg_disparoPGM", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cpg_comandoPGM", "dpg_cgp_n_codigoNavigation")
                        .WithMany("tb_dpg_disparoPGM")
                        .HasForeignKey("dpg_cgp_n_codigo")
                        .HasConstraintName("FK_tb_dpg_disparoPGM_tb_cpg_comandoPGM")
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_eqc_equipamentoCliente", "dpg_eqc_n_codigoNavigation")
                        .WithMany("tb_dpg_disparoPGM")
                        .HasForeignKey("dpg_eqc_n_codigo")
                        .HasConstraintName("FK_tb_dpg_disparoPGM_tb_eqc_equipamentoCliente")
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dpn_dependencias", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ard_arquivoDependencias", "dpn_ard_n_codigoNavigation")
                        .WithMany("tb_dpn_dependencias")
                        .HasForeignKey("dpn_ard_n_codigo")
                        .HasConstraintName("FK_tb_dpn_dependencias_tb_ard_arquivoDependencias");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "dpn_cli_n_codigoNavigation")
                        .WithMany("tb_dpn_dependencias")
                        .HasForeignKey("dpn_cli_n_codigo")
                        .HasConstraintName("FK_tb_dpn_dependencia_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ftd_fotoDependencia", "dpn_ftd_n_codigoNavigation")
                        .WithMany("tb_dpn_dependencias")
                        .HasForeignKey("dpn_ftd_n_codigo")
                        .HasConstraintName("FK_tb_dpn_dependencias_tb_ftd_fotoDependencia")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_dva_duvidasApp", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "dva_cli_n_codigoNavigation")
                        .WithMany("tb_dva_duvidasApp")
                        .HasForeignKey("dva_cli_n_codigo")
                        .HasConstraintName("FK_tb_dva_duvidasApp_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_emp_empresa", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cid_cidade", "emp_cid_n_codigoNavigation")
                        .WithMany("tb_emp_empresa")
                        .HasForeignKey("emp_cid_n_codigo")
                        .HasConstraintName("FK_tb_emp_empresa_tb_cid_cidade");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_dis_distribuidor", "tb_dis_distribuidor")
                        .WithMany("tb_emp_empresa")
                        .HasForeignKey("emp_dis_n_codigo")
                        .HasConstraintName("FK_tb_emp_empresa_tb_dis_distribuidor")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_est_estado", "emp_est_n_codigoNavigation")
                        .WithMany("tb_emp_empresa")
                        .HasForeignKey("emp_est_n_codigo")
                        .HasConstraintName("FK_tb_emp_empresa_tb_est_estado");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fem_fotoEmpresa", "emp_fem_n_codigoNavigation")
                        .WithMany("tb_emp_empresa")
                        .HasForeignKey("emp_fem_n_codigo")
                        .HasConstraintName("FK_tb_emp_empresa_tb_fem_fotoEmpresa");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mol_modulosLiberados", "emp_mol_n_codigoNavigation")
                        .WithMany("tb_emp_empresa")
                        .HasForeignKey("emp_mol_n_codigo")
                        .HasConstraintName("FK_tb_emp_empresa_tb_mol_modulosLiberados");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_eno_envioNotificacao", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "eno_cli_n_codigoNavigation")
                        .WithMany("tb_eno_envioNotificacao")
                        .HasForeignKey("eno_cli_n_codigo")
                        .HasConstraintName("FK_tb_eno_envioNotificacao_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_eqc_equipamentoCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "eqc_cli_n_codigoNavigation")
                        .WithMany("tb_eqc_equipamentoCliente")
                        .HasForeignKey("eqc_cli_n_codigo")
                        .HasConstraintName("FK_tb_eqc_equipamentoCliente_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_eti_entidadeTipo", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ent_entidade", "eti_ent_n_codigoNavigation")
                        .WithMany("tb_eti_entidadeTipo")
                        .HasForeignKey("eti_ent_n_codigo")
                        .HasConstraintName("FK_tb_eti_entidadeTipo_tb_ent_entidade")
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_tcl_tipoCliente", "eti_tlc_n_codigoNavigation")
                        .WithMany("tb_eti_entidadeTipo")
                        .HasForeignKey("eti_tlc_n_codigo")
                        .HasConstraintName("FK_tb_eti_entidadeTipo_tb_tcl_tipoCliente")
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_eve_evento", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "eve_cli_n_codigoNavigation")
                        .WithMany("tb_eve_evento")
                        .HasForeignKey("eve_cli_n_codigo")
                        .HasConstraintName("FK_tb_eve_evento_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fac_face", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "fac_cli_n_codigoNavigation")
                        .WithMany("tb_fac_face")
                        .HasForeignKey("fac_cli_n_codigo")
                        .HasConstraintName("FK_tb_fac_face_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fer_feriado", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "fer_n_codigoClienteNavigation")
                        .WithMany("tb_fer_feriado")
                        .HasForeignKey("fer_n_codigoCliente")
                        .HasConstraintName("FK_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fro_frota", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "fro_cli_n_codigoNavigation")
                        .WithMany("tb_fro_frota")
                        .HasForeignKey("fro_cli_n_codigo")
                        .HasConstraintName("FK_tb_fro_veiculo_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mav_marcaVeiculo", "fro_mav_n_codigoNavigation")
                        .WithMany("tb_fro_frota")
                        .HasForeignKey("fro_mav_n_codigo")
                        .HasConstraintName("FK_tb_fro_frota_tb_mav_marcaVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_fzk_tabelaHorarioFacialZK", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_con_controladora", "fzk_con_n_codigoNavigation")
                        .WithMany("tb_fzk_tabelaHorarioFacialZK")
                        .HasForeignKey("fzk_con_n_codigo")
                        .HasConstraintName("FK_tb_fzk_tabelaHorarioFacialZK_tb_con_controladora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_hor_horario", "fzk_hor_n_codigoNavigation")
                        .WithMany("tb_fzk_tabelaHorarioFacialZK")
                        .HasForeignKey("fzk_hor_n_codigo")
                        .HasConstraintName("FK_tb_fzk_tabelaHorarioFacialZK_tb_hor_horario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_gpp_grupoPermissaoOperador", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "gpp_cli_n_codigoNavigation")
                        .WithMany("tb_gpp_grupoPermissaoOperador")
                        .HasForeignKey("gpp_cli_n_codigo")
                        .HasConstraintName("fk_tb_gpp_grupoPermissaoOperador");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_emp_empresa", "gpp_emp_n_codigoNavigation")
                        .WithMany("tb_gpp_grupoPermissaoOperador")
                        .HasForeignKey("gpp_emp_n_codigo")
                        .HasConstraintName("FK_tb_gpp_grupoPermissaoOperador_tb_emp_empresa")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mol_modulosLiberados", "gpp_mol_n_codigoNavigation")
                        .WithMany("tb_gpp_grupoPermissaoOperador")
                        .HasForeignKey("gpp_mol_n_codigo")
                        .HasConstraintName("FK_tb_gpp_grupoPermissaoOperador_tb_mol_modulosLiberados")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_gpv_grupoVagas", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "gpv_cli_n_codigoNavigation")
                        .WithMany("tb_gpv_grupoVagas")
                        .HasForeignKey("gpv_cli_n_codigo")
                        .HasConstraintName("FK_tb_gpv_grupoVagas_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_phr_perfilHorario", "gpv_phr_n_codigoNavigation")
                        .WithMany("tb_gpv_grupoVagas")
                        .HasForeignKey("gpv_phr_n_codigo")
                        .HasConstraintName("FK_tb_gpv_grupoVagas_tb_phr_perfilhorario");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ace_acesso", "grf_ace_n_codigoNavigation")
                        .WithMany("tb_grf_grupoFamiliar")
                        .HasForeignKey("grf_ace_n_codigo")
                        .HasConstraintName("FK_tb_grf_grupoFamiliar_tb_ace_acesso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "grf_cli_n_codigoNavigation")
                        .WithMany("tb_grf_grupoFamiliar")
                        .HasForeignKey("grf_cli_n_codigo")
                        .HasConstraintName("FK_tb_grf_grupoFamiliar_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fot_foto", "grf_fot_n_codigoNavigation")
                        .WithMany("tb_grf_grupoFamiliar")
                        .HasForeignKey("grf_fot_n_codigo")
                        .HasConstraintName("FK_tb_grf_grupoFamiliar_tb_fot_foto");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_gzk_grupoTabelaHorarioFacialZK", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_con_controladora", "gzk_con_n_codigoNavigation")
                        .WithMany("tb_gzk_grupoTabelaHorarioFacialZK")
                        .HasForeignKey("gzk_con_n_codigo")
                        .HasConstraintName("FK_tb_gzk_grupoTabelaHorarioFacialZK_tb_con_controladora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_phr_perfilHorario", "gzk_phr_n_codigoNavigation")
                        .WithMany("tb_gzk_grupoTabelaHorarioFacialZK")
                        .HasForeignKey("gzk_phr_n_codigo")
                        .HasConstraintName("FK_tb_gzk_grupoTabelaHorarioFacialZK_tb_phr_perfilHorario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_hdi_historicoDispositivo", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_con_controladora", "hdi_con_n_codigoNavigation")
                        .WithMany("tb_hdi_historicoDispositivo")
                        .HasForeignKey("hdi_con_n_codigo")
                        .HasConstraintName("FK_tb_hdi_historicoDispositivo_tb_con_controladora")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_hil_historicoLiberacao", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "hil_mor_n_codigoNavigation")
                        .WithMany("tb_hil_historicoLiberacao")
                        .HasForeignKey("hil_mor_n_codigo")
                        .HasConstraintName("FK_tb_hil_historicoLiberacao_tb_mor_morador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_hor_horario", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "hor_cli_n_codigoNavigation")
                        .WithMany("tb_hor_horario")
                        .HasForeignKey("hor_cli_n_codigo")
                        .HasConstraintName("FK_tb_hor_horario_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_inc_informacoesCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "inc_cli_n_codigoNavigation")
                        .WithMany("tb_inc_informacoesCliente")
                        .HasForeignKey("inc_cli_n_codigo")
                        .HasConstraintName("FK_tb_inc_informacoesCliente_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lay_layout", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cla_cabecalhoLayout", "lay_cla_n_codigoNavigation")
                        .WithMany("tb_lay_layout")
                        .HasForeignKey("lay_cla_n_codigo")
                        .HasConstraintName("FK_tb_lay_layout_tb_cla_cabecalhoLayout");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "lay_cli_n_codigoNavigation")
                        .WithMany("tb_lay_layout")
                        .HasForeignKey("lay_cli_n_codigo")
                        .HasConstraintName("FK_tb_lay_layout_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ddv_dispositivoDVRCliente", "lay_ddv_n_codigoNavigation")
                        .WithMany("tb_lay_layout")
                        .HasForeignKey("lay_ddv_n_codigo")
                        .HasConstraintName("FK_tb_lay_layout_tb_ddv_dispositivoDVRCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lbr_logBackupRestauracao", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "lbr_cli_n_codigoNavigation")
                        .WithMany("tb_lbr_logBackupRestauracao")
                        .HasForeignKey("lbr_cli_n_codigo")
                        .HasConstraintName("FK_tb_lbr_logBackupRestauracao_tb_cli_cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lca_localidadeCatalogo", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cal_catalogo", "lac_cal_n_codigoNavigation")
                        .WithMany("tb_lca_localidadeCatalogo")
                        .HasForeignKey("lca_cal_n_codigo")
                        .HasConstraintName("FK_tb_lca_localidadeCatalogo_tb_cal_catalogo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_lcc_localidadeCliente", "lac_lcc_n_codigoNavigation")
                        .WithMany("tb_lca_localidadeCatalogo")
                        .HasForeignKey("lca_lcc_n_codigo")
                        .HasConstraintName("FK_tb_lca_localidadeCatalogo_tb_lcc_localidadeCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lcc_localidadeCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "lcc_cli_n_codigoNavigation")
                        .WithMany("tb_lcc_localidadeCliente")
                        .HasForeignKey("lcc_cli_n_codigo")
                        .HasConstraintName("FK_tb_lcc_localidadeCliente_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lcg_localidadeClienteGrupoFamiliar", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", "lcg_grf_n_codigoNavigation")
                        .WithMany("tb_lcg_localidadeClienteGrupoFamiliar")
                        .HasForeignKey("lcg_grf_n_codigo")
                        .HasConstraintName("FK_tb_lcg_localidadeClienteGrupoFamiliar_tb_grf_GrupoFamiliar")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_lcc_localidadeCliente", "lcg_lcc_n_codigoBlocoQuadraNavigation")
                        .WithMany("tb_lcg_localidadeClienteGrupoFamiliar")
                        .HasForeignKey("lcg_lcc_n_codigoBlocoQuadra")
                        .HasConstraintName("FK_tb_lcg_localidadeClienteGrupoFamiliar_tb_lcc_localidadeCliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_lcc_localidadeCliente", "lcg_lcc_n_codigoLoteAptoNavigation")
                        .WithMany("tb_lcg_localidadeClienteGrupoFamiliarLoteApto")
                        .HasForeignKey("lcg_lcc_n_codigoLoteApto")
                        .HasConstraintName("FK_tb_lcg_localidadeClienteGrupoFamiliar_tb_lcc_localidadeClienteLoteApto");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lid_liberacaoDelivery", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "lid_mor_n_codigoNavigation")
                        .WithMany("tb_lid_liberacaoDelivery")
                        .HasForeignKey("lid_mor_n_codigo")
                        .HasConstraintName("FK_tb_lid_liberacaoDelivery_tb_mor_Morador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_lip_liberacaoPrestador", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "lip_mor_n_codigoNavigation")
                        .WithMany("tb_lip_liberacaoPrestador")
                        .HasForeignKey("lip_mor_n_codigo")
                        .HasConstraintName("FK_tb_lip_liberacaoPrestador_tb_mor_Morador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_liv_liberacaoVisitante", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "liv_mor_n_codigoNavigation")
                        .WithMany("tb_liv_liberacaoVisitante")
                        .HasForeignKey("liv_mor_n_codigo")
                        .HasConstraintName("FK_tb_liv_liberacaoVisitante_tb_mor_morador");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_vis_visitasApp", "liv_vis_n_codigoNavigation")
                        .WithMany("tb_liv_liberacaoVisitante")
                        .HasForeignKey("liv_vis_n_codigo")
                        .HasConstraintName("FK_tb_liv_liberacaoVisitante_tb_vis_visitasApp");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_vis_visitante", "liv_visitante_n_codigoNavigation")
                        .WithMany("tb_liv_liberacaoVisitante")
                        .HasForeignKey("liv_visitante_n_codigo")
                        .HasConstraintName("FK_tb_liv_liberacaoVisitante_tb_vis_visitante");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_moc_motivoOcorrenciaCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "moc_cli_n_codigoNavigation")
                        .WithMany("tb_moc_motivoOcorrenciaCliente")
                        .HasForeignKey("moc_cli_n_codigo")
                        .HasConstraintName("FK_tb_moc_motivoOcorrenciaCliente_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mon_monitoramento", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cev_categorizacaoEvento", "mon_cev_n_codigoNavigation")
                        .WithMany("tb_mon_monitoramento")
                        .HasForeignKey("mon_cev_n_codigo")
                        .HasConstraintName("FK_tb_mon_monitoramento_tb_cev_categorizacaoEvento");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "mon_cli_n_codigoNavigation")
                        .WithMany("tb_mon_monitoramento")
                        .HasForeignKey("mon_cli_n_codigo")
                        .HasConstraintName("FK_tb_mon_monitoramento_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_eve_evento", "mon_eve_n_codigoNavigation")
                        .WithMany("tb_mon_monitoramento")
                        .HasForeignKey("mon_eve_n_codigo")
                        .HasConstraintName("FK_tb_mon_monitoramento_tb_eve_evento");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_pec_processoExclusaoCliente", "mon_pec_n_codigoNavigation")
                        .WithMany("tb_mon_monitoramento")
                        .HasForeignKey("mon_pec_n_codigo")
                        .HasConstraintName("FK_tb_mon_monitoramento_tb_pec_processoExclusaoCliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_stm_statusMonitoramento", "mon_stm_n_codigoNavigation")
                        .WithMany("tb_mon_monitoramento")
                        .HasForeignKey("mon_stm_n_codigo")
                        .HasConstraintName("FK_tb_mon_monitoramento_tb_stm_statusMonitoramento");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_zoc_zoneamentoCliente", "mon_zoc_n_codigoNavigation")
                        .WithMany("tb_mon_monitoramento")
                        .HasForeignKey("mon_zoc_n_codigo")
                        .HasConstraintName("FK_tb_mon_monitoramento_tb_eqc_equipamentoCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mor_Morador", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "mor_cli_n_codigoNavigation")
                        .WithMany("tb_mor_Morador")
                        .HasForeignKey("mor_cli_n_codigo")
                        .HasConstraintName("FK_tb_mor_Morador_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fot_foto", "mor_fot_n_codigoNavigation")
                        .WithMany("tb_mor_Moradormor_fot_n_codigoNavigation")
                        .HasForeignKey("mor_fot_n_codigo")
                        .HasConstraintName("FK_tb_mor_Morador_tb_fot_foto");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fot_foto", "mor_fot_n_documentoNavigation")
                        .WithMany("tb_mor_Moradormor_fot_n_documentoNavigation")
                        .HasForeignKey("mor_fot_n_documento")
                        .HasConstraintName("FK_tb_mor_morador_tb_fot_foto_doc");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", "mor_grf_n_codigoNavigation")
                        .WithMany("tb_mor_Morador")
                        .HasForeignKey("mor_grf_n_codigo")
                        .HasConstraintName("FK_tb_mor_Morador_tb_grf_grupoFamiliar");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mpc_mapeamentoPontoAcesso", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "mpc_cli_n_codigoNavigation")
                        .WithMany("tb_mpc_mapeamentoPontoAcesso")
                        .HasForeignKey("mpc_cli_n_codigo")
                        .HasConstraintName("FK_tb_mpc_mapeamentoPontoAcesso_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_mve_movimentacaoVeiculo", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fro_frota", "mve_fro_n_codigoNavigation")
                        .WithMany("tb_mve_movimentacaoVeiculo")
                        .HasForeignKey("mve_fro_n_codigo")
                        .HasConstraintName("FK_tb_mve_movimentacaoVeiculo_tb_fro_frota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "mve_mor_n_codigoNavigation")
                        .WithMany("tb_mve_movimentacaoVeiculo")
                        .HasForeignKey("mve_mor_n_codigo")
                        .HasConstraintName("FK_tb_mve_movimentacaoVeiculo_tb_mor_Morador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_not_notificacao", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_avi_aviso", "not_avi_n_codigoNavigation")
                        .WithMany("tb_not_notificacao")
                        .HasForeignKey("not_avi_n_codigo")
                        .HasConstraintName("FK_tb_not_notificacao_tb_avi_aviso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_avi_avisoEmpresa", "not_avi_n_codigoEmpresaNavigation")
                        .WithMany("tb_not_notificacao")
                        .HasForeignKey("not_avi_n_codigoEmpresa")
                        .HasConstraintName("FK_tb_not_notificacao_tb_avi_avisoEmpresa")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ope_operador", "not_ope_n_codigoNavigation")
                        .WithMany("tb_not_notificacao")
                        .HasForeignKey("not_ope_n_codigo")
                        .HasConstraintName("FK_tb_not_notificacao_tb_ope_operador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_not_notificacaoApp", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_eno_envioNotificacao", "not_eno_n_codigoNavigation")
                        .WithMany("tb_not_notificacaoApp")
                        .HasForeignKey("not_eno_n_codigo")
                        .HasConstraintName("FK_tb_not_notificacaoApp_tb_eno_envioNotificacao")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_zec_zeladorCliente", "not_zec_n_codigoNavigation")
                        .WithMany("tb_not_notificacaoApp")
                        .HasForeignKey("not_zec_n_codigo")
                        .HasConstraintName("FK_tb_not_notificacaoApp_tb_zec_zeladorCliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ope_operador", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ace_acesso", "ope_ace_n_codigoNavigation")
                        .WithMany("tb_ope_operador")
                        .HasForeignKey("ope_ace_n_codigo")
                        .HasConstraintName("FK_tb_ope_operador_tb_ace_acesso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cid_cidade", "ope_cid_n_codigoNavigation")
                        .WithMany("tb_ope_operador")
                        .HasForeignKey("ope_cid_n_codigo")
                        .HasConstraintName("FK_tb_ope_operador_tb_cid_cidade");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_emp_empresa", "ope_emp_n_codigoNavigation")
                        .WithMany("tb_ope_operador")
                        .HasForeignKey("ope_emp_n_codigo")
                        .HasConstraintName("FK_tb_ope_operador_tb_emp_empresa");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_est_estado", "ope_est_n_codigoNavigation")
                        .WithMany("tb_ope_operador")
                        .HasForeignKey("ope_est_n_codigo")
                        .HasConstraintName("FK_tb_ope_operador_tb_est_estado");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mol_modulosLiberados", "ope_mol_n_codigoNavigation")
                        .WithMany("tb_ope_operador")
                        .HasForeignKey("ope_mol_n_codigo")
                        .HasConstraintName("FK_tb_ope_operador_tb_mol_modulosLiberados");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_pop_perfilOperador", "ope_pop_n_codigoNavigation")
                        .WithMany("tb_ope_operador")
                        .HasForeignKey("ope_pop_n_codigo")
                        .HasConstraintName("FK_tb_ope_operador_tb_pop_perfilOperador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_opl_operadorLocal", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "opl_cli_n_codigoNavigation")
                        .WithMany("tb_opl_operadorLocal")
                        .HasForeignKey("opl_cli_n_codigo")
                        .HasConstraintName("FK_tb_opl_operadorLocal_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_gpp_grupoPermissaoOperador", "opl_gpp_n_codigoNavigation")
                        .WithMany("tb_opl_operadorLocal")
                        .HasForeignKey("opl_gpp_n_codigo")
                        .HasConstraintName("FK_tb_opl_operadorLocal_tb_gpp_grupoPermissaoOperador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_opo_operadorOnline", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "opo_cli_n_codigoNavigation")
                        .WithMany("tb_opo_operadorOnline")
                        .HasForeignKey("opo_cli_n_codigo")
                        .HasConstraintName("FK_tb_opo_operadorOnline_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pan_panicoApp", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "pan_mor_n_codigoNavigation")
                        .WithMany("tb_pan_panicoApp")
                        .HasForeignKey("pan_mor_n_codigo")
                        .HasConstraintName("FK_tb_pan_panicoApp_tb_mor_Morador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_par_parametrosEmpresa", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_emp_empresa", "par_emp_n_codigoNavigation")
                        .WithMany("tb_par_parametrosEmpresa")
                        .HasForeignKey("par_emp_n_codigo")
                        .HasConstraintName("FK_tb_par_parametrosEmpresa_tb_emp_empresa")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pec_permissaoCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "pec_cli_n_codigoNavigation")
                        .WithMany("tb_pec_permissaoCliente")
                        .HasForeignKey("pec_cli_n_codigo")
                        .HasConstraintName("FK_tb_pec_permissaoCliente_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ope_operador", "pec_ope_n_codigoNavigation")
                        .WithMany("tb_pec_permissaoCliente")
                        .HasForeignKey("pec_ope_n_codigo")
                        .HasConstraintName("FK_tb_pec_permissaoCliente_tb_ope_operador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_per_per_perfilPermissionamento", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_per_permissionamento", "tb_per_permissionamento")
                        .WithMany("tb_per_per_perfilPermissionamento")
                        .HasForeignKey("per_u_n_codigo")
                        .HasConstraintName("FK_tb_per_per_perfilPermissionamento_tb_per_permissionamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_per_perfil", "tb_per_perfil")
                        .WithMany()
                        .HasForeignKey("tb_per_perfilper_n_codigo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_per_perguntas", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "per_cli_n_codigoNavigation")
                        .WithMany("tb_per_perguntas")
                        .HasForeignKey("per_cli_n_codigo")
                        .HasConstraintName("FK_tb_per_perguntas_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pet_pet", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fot_foto", "pet_fot_n_codigoNavigation")
                        .WithMany("tb_pet_pet")
                        .HasForeignKey("pet_fot_n_codigo")
                        .HasConstraintName("FK_tb_pet_pet_tb_fot_foto");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", "pet_grf_n_codigoNavigation")
                        .WithMany("tb_pet_pet")
                        .HasForeignKey("pet_grf_n_codigo")
                        .HasConstraintName("FK_tb_pet_pet_tb_grf_grupoFamiliar")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_rac_raca", "pet_rac_n_codigoNavigation")
                        .WithMany("tb_pet_pet")
                        .HasForeignKey("pet_rac_n_codigo")
                        .HasConstraintName("FK_tb_pet_pet_tb_rac_raca");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pgc_pgmCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "pgc_cli_n_codigoNavigation")
                        .WithMany("tb_pgc_pgmCliente")
                        .HasForeignKey("pgc_cli_n_codigo")
                        .HasConstraintName("FK_tb_pgc_pgmCliente_tb_cli_cliente")
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cpg_comandoPGM", "pgc_cpg_n_codigoNavigation")
                        .WithMany("tb_pgc_pgmCliente")
                        .HasForeignKey("pgc_cpg_n_codigo")
                        .HasConstraintName("FK_tb_pgc_pgmCliente_tb_cpg_comandoPGM")
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_eqc_equipamentoCliente", "pgc_eqc_n_codigoNavigation")
                        .WithMany("tb_pgc_pgmCliente")
                        .HasForeignKey("pgc_eqc_n_codigo")
                        .HasConstraintName("FK_tb_pgc_pgmCliente_tb_eqc_equipamentoCliente")
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pgp_permissoesGrupo", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_gpp_grupoPermissaoOperador", "pgp_gpp_n_codigoNavigation")
                        .WithMany("tb_pgp_permissoesGrupo")
                        .HasForeignKey("pgp_gpp_n_codigo")
                        .HasConstraintName("FK_tb_pgp_permissoesGrupo_tb_gpp_grupoPermissaoOperador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_top_tipoPermissaoOperador", "pgp_top_n_codigoNavigation")
                        .WithMany("tb_pgp_permissoesGrupo")
                        .HasForeignKey("pgp_top_n_codigo")
                        .HasConstraintName("FK_tb_pgp_permissoesGrupo_tb_top_tipoPermissaoOperador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_phr_perfilHorario", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "phr_cli_n_codigoNavigation")
                        .WithMany("tb_phr_perfilHorario")
                        .HasForeignKey("phr_cli_n_codigo")
                        .HasConstraintName("FK_tb_phr_perfilHorario_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_hor_horario", "phr_hor_n_codigoNavigation")
                        .WithMany("tb_phr_perfilHorario")
                        .HasForeignKey("phr_hor_n_codigo")
                        .HasConstraintName("FK_tb_phr_perfilHorario_tb_hor_horario");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_plc_pontoLayoutCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cla_cabecalhoLayout", "plc_cla_n_codigoNavigation")
                        .WithMany("tb_plc_pontoLayoutCliente")
                        .HasForeignKey("plc_cla_n_codigo")
                        .HasConstraintName("FK_tb_plc_pontoLayoutCliente_tb_cla_cabecalhoLayout");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "plc_cli_n_codigoNavigation")
                        .WithMany("tb_plc_pontoLayoutCliente")
                        .HasForeignKey("plc_cli_n_codigo")
                        .HasConstraintName("FK_tb_plc_pontoLayoutCliente_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_poa_portaAlarme", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_emp_empresa", "poa_emp_n_codigoNavigation")
                        .WithMany("tb_poa_portaAlarme")
                        .HasForeignKey("poa_emp_n_codigo")
                        .HasConstraintName("FK_tb_poa_portaAlarme_tb_emp_empresa");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_por_portasStream", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "por_cli_n_codigoNavigation")
                        .WithMany("tb_por_portasStream")
                        .HasForeignKey("por_cli_n_codigo")
                        .HasConstraintName("FK_tb_por_portasStream_tb_por_portasStream");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pro_proprietario", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ace_acesso", "pro_ace_n_codigoNavigation")
                        .WithMany("tb_pro_proprietario")
                        .HasForeignKey("pro_ace_n_codigo")
                        .HasConstraintName("FK_tb_pro_proprietario_tb_ace_acesso");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cid_cidade", "pro_cid_n_codigoNavigation")
                        .WithMany("tb_pro_proprietario")
                        .HasForeignKey("pro_cid_n_codigo")
                        .HasConstraintName("FK_tb_pro_proprietario_tb_cid_cidade");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_est_estado", "pro_est_n_codigoNavigation")
                        .WithMany("tb_pro_proprietario")
                        .HasForeignKey("pro_est_n_codigo")
                        .HasConstraintName("FK_tb_pro_proprietario_tb_est_estado");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pse_prestadorServico", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "pse_cli_n_codigoNavigation")
                        .WithMany("tb_pse_prestadorServico")
                        .HasForeignKey("pse_cli_n_codigo")
                        .HasConstraintName("FK_tb_pse_prestadorServico_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fot_foto", "pse_fot_n_codigoNavigation")
                        .WithMany("tb_pse_prestadorServicopse_fot_n_codigoNavigation")
                        .HasForeignKey("pse_fot_n_codigo")
                        .HasConstraintName("FK_tb_pse_prestadorServico_tb_fot_foto");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fot_foto", "pse_fot_n_documentoNavigation")
                        .WithMany("tb_pse_prestadorServicopse_fot_n_documentoNavigation")
                        .HasForeignKey("pse_fot_n_documento")
                        .HasConstraintName("FK_tb_pse_prestadorServico_tb_fot_foto_documento");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_gpv_grupoVagas", "pse_gpv_n_codigoNavigation")
                        .WithMany("tb_pse_prestadorServico")
                        .HasForeignKey("pse_gpv_n_codigo")
                        .HasConstraintName("FK_tb_pse_prestadorServico_tb_gpv_grupovagas");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_pta_pontosAcesso", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cla_cabecalhoLayout", "pta_cla_n_codigoNavigation")
                        .WithMany("tb_pta_pontosAcesso")
                        .HasForeignKey("pta_cla_n_codigo")
                        .HasConstraintName("FK_tb_pta_pontosAcesso_tb_cla_cabecalhoLayout");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "pta_cli_n_codigoNavigation")
                        .WithMany("tb_pta_pontosAcesso")
                        .HasForeignKey("pta_cli_n_codigo")
                        .HasConstraintName("FK_tb_pta_pontosAcesso_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_con_controladora", "pta_con_n_codigoNavigation")
                        .WithMany("tb_pta_pontosAcesso")
                        .HasForeignKey("pta_con_n_codigo")
                        .HasConstraintName("FK_tb_pta_pontosAcesso_tb_con_controladora")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_lay_layout", "pta_lay_n_codigoNavigation")
                        .WithMany("tb_pta_pontosAcesso")
                        .HasForeignKey("pta_lay_n_codigo")
                        .HasConstraintName("FK_tb_pta_pontosAcesso_tb_lay_layout");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ral_ramalLayout", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cla_cabecalhoLayout", "ral_cla_n_codigoNavigation")
                        .WithMany("tb_ral_ramalLayout")
                        .HasForeignKey("ral_cla_n_codigo")
                        .HasConstraintName("FK_tb_ral_ramalLayout_tB_cla_cabecalhoLayout");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_lay_layout", "ral_lay_n_codigoNavigation")
                        .WithMany("tb_ral_ramalLayout")
                        .HasForeignKey("ral_lay_n_codigo")
                        .HasConstraintName("FK_tb_ral_ramalLayout_tb_lay_layout")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_ref_refeicao", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "ref_cli_n_codigoNavigation")
                        .WithMany("tb_ref_refeicao")
                        .HasForeignKey("ref_cli_n_codigo")
                        .HasConstraintName("FK_tb_ref_refeicao_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_rel_responsavelLocacaoSaloes", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "rel_cli_n_codigoNavigation")
                        .WithMany("tb_rel_responsavelLocacaoSaloes")
                        .HasForeignKey("rel_cli_n_codigo")
                        .HasConstraintName("FK_tb_rel_responsavelLocacaoSaloes_tb_cli_cliente");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_res_registroSalao", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_dpn_dependencias", "res_dpn_n_codigoNavigation")
                        .WithMany("tb_res_registroSalao")
                        .HasForeignKey("res_dpn_n_codigo")
                        .HasConstraintName("FK_tb_res_registroSalao_tb_dpn_dependencias")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "res_mor_n_codigoNavigation")
                        .WithMany("tb_res_registroSalao")
                        .HasForeignKey("res_mor_n_codigo")
                        .HasConstraintName("FK_tb_res_registroSalao_tb_mor_Morador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_rop_ramalOperador", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ope_operador", "rop_ope_n_codigoNavigation")
                        .WithMany("tb_rop_ramalOperador")
                        .HasForeignKey("rop_ope_n_codigo")
                        .HasConstraintName("FK_tb_rop_ramalOperador_tb_ope_operador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_scc_subCategoriaCatalogo", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cat_categoriaCatalogo", "scc_cat_n_codigoNavigation")
                        .WithMany("tb_scc_subCategoriaCatalogo")
                        .HasForeignKey("scc_cat_n_codigo")
                        .HasConstraintName("FK_tb_scc_subCategoriaCatalogo_tb_cat_categoriaCatalogo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_sin_sincronizacaoPlacas", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "sin_cli_n_codigoNavigation")
                        .WithMany("tb_sin_sincronizacaoPlacas")
                        .HasForeignKey("sin_cli_n_codigo")
                        .HasConstraintName("fk_tb_sin_sincronizacaoPlacas_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_soz_solicitarZelador", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fap_fotoApp", "soz_fap_n_codigoNavigation")
                        .WithMany("tb_soz_solicitarZelador")
                        .HasForeignKey("soz_fap_n_codigo")
                        .HasConstraintName("FK_tb_soz_solicitarZelador_tb_fap_fotoApp");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "soz_mor_n_codigoNavigation")
                        .WithMany("tb_soz_solicitarZelador")
                        .HasForeignKey("soz_mor_n_codigo")
                        .HasConstraintName("FK_tb_soz_solicitarZelador_tb_mor_Morador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_upe_usuarioAPPpermissao", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "upe_mor_n_codigoNavigation")
                        .WithMany("tb_upe_usuarioAPPpermissao")
                        .HasForeignKey("upe_mor_n_codigo")
                        .HasConstraintName("FK_tb_upe_usuarioAPPpermissao_tb_mor_Morador");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_per_permissoes", "upe_per_n_codigoNavigation")
                        .WithMany("tb_upe_usuarioAPPpermissao")
                        .HasForeignKey("upe_per_n_codigo")
                        .HasConstraintName("FK_tb_upe_usuarioAPPpermissao_tb_per_permissoes");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_usc_usuarioSalaComercial", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ace_acesso", "usc_ace_n_codigoNavigation")
                        .WithMany("tb_usc_usuarioSalaComercial")
                        .HasForeignKey("usc_ace_n_codigo")
                        .HasConstraintName("FK_tb_usc_usuarioSalaComercial_tb_ace_acesso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", "usc_grf_n_codigoNavigation")
                        .WithMany("tb_usc_usuarioSalaComercial")
                        .HasForeignKey("usc_grf_n_codigo")
                        .HasConstraintName("FK_tb_usc_usuarioSalaComercial_tb_grf_grupoFamiliar");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "usc_mor_n_codigoNavigation")
                        .WithMany("tb_usc_usuarioSalaComercial")
                        .HasForeignKey("usc_mor_n_codigo")
                        .HasConstraintName("FK_tb_usc_usuarioSalaComercial_tb_mor_Morador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_usu_UsuarioApp", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "usu_mor_n_codigoNavigation")
                        .WithMany("tb_usu_UsuarioApp")
                        .HasForeignKey("usu_mor_n_codigo")
                        .HasConstraintName("FK_tb_usu_UsuarioApp_tb_mor_Morador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vec_veiculo", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_grf_grupoFamiliar", "vec_grf_n_codigoNavigation")
                        .WithMany("tb_vec_veiculo")
                        .HasForeignKey("vec_grf_n_codigo")
                        .HasConstraintName("FK_tb_vec_veiculo_tb_grf_grupoFamiliar")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mav_marcaVeiculo", "vec_mav_n_codigoNavigation")
                        .WithMany("tb_vec_veiculo")
                        .HasForeignKey("vec_mav_n_codigo")
                        .HasConstraintName("FK_tb_vec_veiculo_tb_mav_marcaVeiculo");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vic_vigilanteCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "vic_cli_n_codigoNavigation")
                        .WithMany("tb_vic_vigilanteCliente")
                        .HasForeignKey("vic_cli_n_codigo")
                        .HasConstraintName("FK_tb_vic_vigilanteCliente_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vid_video", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_con_monitoramentoControleAcesso", "vid_con_n_codigoNavigation")
                        .WithMany("tb_vid_video")
                        .HasForeignKey("vid_con_n_codigo")
                        .HasConstraintName("FK_tb_vid_video_tb_con_monitoramentoControleAcesso");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vis_visitante", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "vis_cli_n_codigoNavigation")
                        .WithMany("tb_vis_visitante")
                        .HasForeignKey("vis_cli_n_codigo")
                        .HasConstraintName("FK_tb_vis_visitante_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fot_foto", "vis_fot_n_codigoNavigation")
                        .WithMany("tb_vis_visitantevis_fot_n_codigoNavigation")
                        .HasForeignKey("vis_fot_n_codigo")
                        .HasConstraintName("FK_tb_vis_visitante_tb_fot_foto");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_fot_foto", "vis_fot_n_documentoNavigation")
                        .WithMany("tb_vis_visitantevis_fot_n_documentoNavigation")
                        .HasForeignKey("vis_fot_n_documento")
                        .HasConstraintName("FK_tb_vis_visitante_tb_fot_foto_documento");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_gpv_grupoVagas", "vis_gpv_n_codigoNavigation")
                        .WithMany("tb_vis_visitante")
                        .HasForeignKey("vis_gpv_n_codigo")
                        .HasConstraintName("FK_tb_vis_visitante_tb_gpv_grupovagas");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_vpp_visitanteApp", "tb_vpp_visitanteApp")
                        .WithOne("tb_vis_visitante")
                        .HasForeignKey("Iconnect.Infraestrutura.Models.tb_vis_visitante", "vis_vpp_n_codigo")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_vis_visitasApp", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_age_agenda", "vis_age_n_codigoNavigation")
                        .WithMany("tb_vis_visitasApp")
                        .HasForeignKey("vis_age_n_codigo")
                        .HasConstraintName("FK_tb_vis_visitasApp_tb_age_agenda");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cab_cabecalhoEvento", "vis_cab_n_codigoNavigation")
                        .WithMany("tb_vis_visitasApp")
                        .HasForeignKey("vis_cev_n_codigo")
                        .HasConstraintName("FK_tb_vis_visitasApp_tb_cab_cabecalhoEvento")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "vis_mor_n_codigoNavigation")
                        .WithMany("tb_vis_visitasApp")
                        .HasForeignKey("vis_mor_n_codigo")
                        .HasConstraintName("FK_tb_vis_visitasApp_tb_mor_Morador");
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_zec_zeladorCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_ace_acesso", "zec_ace_n_codigoNavigation")
                        .WithMany("tb_zec_zeladorCliente")
                        .HasForeignKey("zec_ace_n_codigo")
                        .HasConstraintName("FK_tb_zec_zeladorCliente_tb_ace_acesso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "zec_cli_n_codigoNavigation")
                        .WithMany("tb_zec_zeladorCliente")
                        .HasForeignKey("zec_cli_n_codigo")
                        .HasConstraintName("FK_tb_zec_zeladorCliente_tb_cli_cliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mol_modulosLiberados", "zec_mol_n_codigoNavigation")
                        .WithMany("tb_zec_zeladorCliente")
                        .HasForeignKey("zec_mol_n_codigo")
                        .HasConstraintName("FK_tb_zec_zeladorCliente_tb_mol_modulosLiberados")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mor_Morador", "zec_mor_n_codigoNavigation")
                        .WithMany("tb_zec_zeladorCliente")
                        .HasForeignKey("zec_mor_n_codigo")
                        .HasConstraintName("FK_tb_zec_zeladorCliente_tb_mor_Morador");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_mos_moduloOrdemServicoLiberado", "zec_mos_n_codigoNavigation")
                        .WithMany("tb_zec_zeladorCliente")
                        .HasForeignKey("zec_mos_n_codigo")
                        .HasConstraintName("FK_tb_zec_zeladorCliente_tb_mos_moduloOrdemServicoLiberado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Iconnect.Infraestrutura.Models.tb_zoc_zoneamentoCliente", b =>
                {
                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cla_cabecalhoLayout", "zoc_cla_n_codigoNavigation")
                        .WithMany("tb_zoc_zoneamentoCliente")
                        .HasForeignKey("zoc_cla_n_codigo")
                        .HasConstraintName("FK_tb_zoc_zoneamentoCliente_tb_cla_cabecalhoLayout");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_cli_cliente", "zoc_cli_n_codigoNavigation")
                        .WithMany("tb_zoc_zoneamentoCliente")
                        .HasForeignKey("zoc_cli_n_codigo")
                        .HasConstraintName("FK_tb_zoc_zoneamentoCliente_tb_cli_cliente");

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_eqc_equipamentoCliente", "zoc_eqc_n_codigoNavigation")
                        .WithMany("tb_zoc_zoneamentoCliente")
                        .HasForeignKey("zoc_eqc_n_codigo")
                        .HasConstraintName("FK_tb_zoc_zoneamentoCliente_tb_eqc_equipamentoCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Iconnect.Infraestrutura.Models.tb_lay_layout", "zoc_lay_n_codigoNavigation")
                        .WithMany("tb_zoc_zoneamentoCliente")
                        .HasForeignKey("zoc_lay_n_codigo")
                        .HasConstraintName("FK_tb_zoc_zoneamentoCliente_tb_lay_layout");
                });
#pragma warning restore 612, 618
        }
    }
}
